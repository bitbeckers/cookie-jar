{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "cookieMonster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_uid",
          "type": "string"
        }
      ],
      "name": "GiveCookie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "initializationParams",
          "type": "bytes"
        }
      ],
      "name": "Setup",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PERC_POINTS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POSTER_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POSTER_TAG",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POSTER_UID",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SUSTAINABILITY_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SUSTAINABILITY_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "allowed",
          "type": "address"
        }
      ],
      "name": "allowList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAllowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_cookieUid",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isGood",
          "type": "bool"
        }
      ],
      "name": "assessReason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "bool[]",
          "name": "_isAlloweds",
          "type": "bool[]"
        }
      ],
      "name": "batchAllowList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "canClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "dateTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cookieAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cookieToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "reachInJar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "cookieMonster",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "reachInJar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isAllowed",
          "type": "bool"
        }
      ],
      "name": "setAllowList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_cookieAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_cookieToken",
          "type": "address"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_initializationParams",
          "type": "bytes"
        }
      ],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "target",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612007806100206000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c8063a4f9edbf116100c3578063caedeefd1161007c578063caedeefd14610303578063d2ca21151461030d578063d4b8399214610316578063e858d17514610329578063f12d5c8414610332578063f2fde38b1461033a57600080fd5b8063a4f9edbf14610284578063b50c99b714610297578063b8038b3e146102aa578063bf3506c1146102bd578063c5393163146102d0578063c6788bdd146102e357600080fd5b8063500cae4c11610115578063500cae4c1461021d57806357a02bdf14610232578063715018a6146102455780637666f1251461024d5780638da5cb5b14610260578063a1638f571461027157600080fd5b8062f5afa8146101515780631fb2f7121461016d5780632848aeaf146101a05780632d43fef1146101d357806340238a7614610208575b600080fd5b61015a61271081565b6040519081526020015b60405180910390f35b610188734a9a27d614a74ee5524909ca27bdbcbb7ed3b31581565b6040516001600160a01b039091168152602001610164565b6101c36101ae3660046114a2565b606b6020526000908152604090205460ff1681565b6040519015158152602001610164565b6101fb6040518060400160405280600981526020016821b7b7b5b4b2a530b960b91b81525081565b604051610164919061150f565b6101886dcd17345801aa8147b8d3950260ff81565b61023061022b36600461156a565b61034d565b005b6102306102403660046115c0565b610402565b6102306105ba565b61023061025b366004611613565b6105ce565b6033546001600160a01b0316610188565b606754610188906001600160a01b031681565b6102306102923660046116b5565b610601565b6102306102a53660046117c4565b6107c5565b6102306102b8366004611885565b6108a3565b6101c36102cb3660046114a2565b6108d5565b6102306102de3660046118be565b610907565b61015a6102f13660046114a2565b60696020526000908152604090205481565b61015a620f424081565b61015a60685481565b606a54610188906001600160a01b031681565b61015a60665481565b6101fb6109b0565b6102306103483660046114a2565b610a3e565b336000908152606b602052604090205460ff166103855760405162461bcd60e51b815260040161037c90611912565b60405180910390fd5b61038e33610ab7565b6103d55760405162461bcd60e51b81526020600482015260186024820152771b9bdd0818481d985b1a590818db185a5b481c195c9a5bd960421b604482015260640161037c565b3360008181526069602052604090204290556066546103f49190610b05565b6103fe8282610bf7565b5050565b336000908152606b602052604090205460ff166104315760405162461bcd60e51b815260040161037c90611912565b60006040518060400160405280600981526020016821b7b7b5b4b2a530b960b91b8152506065858560405160200161046c94939291906119e5565b60408051601f198184030181529190529050600061048b336014610ce4565b90508215610525576dcd17345801aa8147b8d3950260ff6001600160a01b0316630ae1b13d826040516020016104c19190611a3c565b604051602081830303815290604052846040518363ffffffff1660e01b81526004016104ee929190611a67565b600060405180830381600087803b15801561050857600080fd5b505af115801561051c573d6000803e3d6000fd5b505050506105b3565b6dcd17345801aa8147b8d3950260ff6001600160a01b0316630ae1b13d826040516020016105539190611a95565b604051602081830303815290604052846040518363ffffffff1660e01b8152600401610580929190611a67565b600060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b505050505b5050505050565b6105c2610e86565b6105cc6000610ee0565b565b6105d6610e86565b6001600160a01b03919091166000908152606b60205260409020805460ff1916911515919091179055565b600054610100900460ff16158080156106215750600054600160ff909116105b8061063b5750303b15801561063b575060005460ff166001145b61069e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161037c565b6000805460ff1916600117905580156106c1576000805461ff0019166101001790555b600080838060200190518101906106d89190611ac2565b606a80546001600160a01b0319166001600160a01b0387161790559395509293506107089250869150610f329050565b60005b8151811015610770576001606b600084848151811061072c5761072c611b99565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061076881611bc5565b91505061070b565b5061077a82610a3e565b505080156103fe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6107cd610e86565b805182511461081e5760405162461bcd60e51b815260206004820152601e60248201527f436f6f6b69654a6172363535313a206c656e677468206d69736d617463680000604482015260640161037c565b60005b825181101561089e5781818151811061083c5761083c611b99565b6020026020010151606b600085848151811061085a5761085a611b99565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061089681611bc5565b915050610821565b505050565b6108ab610e86565b606892909255606655606780546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b0381166000908152606b602052604081205460ff168015610901575061090182610ab7565b92915050565b336000908152606b602052604090205460ff166109365760405162461bcd60e51b815260040161037c90611912565b61093f33610ab7565b6109865760405162461bcd60e51b81526020600482015260186024820152771b9bdd0818481d985b1a590818db185a5b481c195c9a5bd960421b604482015260640161037c565b3360009081526069602052604090204290556066546109a6908490610b05565b61089e8282610bf7565b606580546109bd90611938565b80601f01602080910402602001604051908101604052809291908181526020018280546109e990611938565b8015610a365780601f10610a0b57610100808354040283529160200191610a36565b820191906000526020600020905b815481529060010190602001808311610a1957829003601f168201915b505050505081565b610a46610e86565b6001600160a01b038116610aab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037c565b610ab481610ee0565b50565b6068546001600160a01b038216600090815260696020526040812054909190610ae09042611bde565b1015806109015750506001600160a01b03166000908152606960205260409020541590565b606754610b1e90839083906001600160a01b0316610fd5565b816001600160a01b03167f2cc90d9a18273a3e516507485d7e22ae77eabb3724ab0f958ba528eb2e58505a82610bdd60658054610b5a90611938565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8690611938565b8015610bd35780601f10610ba857610100808354040283529160200191610bd3565b820191906000526020600020905b815481529060010190602001808311610bb657829003601f168201915b505050505061131f565b604051610beb929190611bf1565b60405180910390a25050565b60006040518060400160405280600981526020016821b7b7b5b4b2a530b960b91b8152506065610c2d60658054610b5a90611938565b604051602001610c3f93929190611c12565b60405160208183030381529060405290506dcd17345801aa8147b8d3950260ff6001600160a01b0316630ae1b13d848484604051602001610c809190611c6c565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610cad93929190611c88565b600060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b50505050505050565b60606000610cf3836002611cd0565b610cfe906002611ce7565b6001600160401b03811115610d1557610d15611648565b6040519080825280601f01601f191660200182016040528015610d3f576020820181803683370190505b509050600360fc1b81600081518110610d5a57610d5a611b99565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d8957610d89611b99565b60200101906001600160f81b031916908160001a9053506000610dad846002611cd0565b610db8906001611ce7565b90505b6001811115610e30576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610dec57610dec611b99565b1a60f81b828281518110610e0257610e02611b99565b60200101906001600160f81b031916908160001a90535060049490941c93610e2981611cfa565b9050610dbb565b508315610e7f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161037c565b9392505050565b6033546001600160a01b031633146105cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600083806020019051810190610f4b9190611d11565b60688390556066829055606780546001600160a01b0319166001600160a01b03831617905591955093509150610f819050611354565b610f8a30611383565b606590610f979082611da3565b507f0ef8145310f85c28ca23a3aebc4f922ea5379c7c26988ed7477cb4480646ad0184604051610fc7919061150f565b60405180910390a150505050565b6000612710610fe7620f424085611e62565b610ff19190611cd0565b606a549091506001600160a01b039081169083166111365760408051602081018252600081529051633e6e012960e11b81526001600160a01b03831691637cdc02529161105991734a9a27d614a74ee5524909ca27bdbcbb7ed3b31591879190600401611e84565b6000604051808303816000875af1158015611078573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a09190810190611eab565b506001600160a01b038116637cdc0252866110bb8588611bde565b604051806020016040528060008152506040518463ffffffff1660e01b81526004016110e993929190611e84565b6000604051808303816000875af1158015611108573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111309190810190611eab565b506105b3565b604051734a9a27d614a74ee5524909ca27bdbcbb7ed3b31560601b6020820152603481018390526001600160a01b03821690637cdc025290859060009060540160408051601f19818403018152908290526111939160240161150f565b60408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b1790525160e085901b6001600160e01b03191681526111de93929190600401611e84565b6000604051808303816000875af11580156111fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112259190810190611eab565b506001600160a01b038116637cdc025284600088611243878a611bde565b60405160609290921b6bffffffffffffffffffffffff19166020830152603482015260540160408051601f19818403018152908290526112859160240161150f565b60408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b1790525160e085901b6001600160e01b03191681526112d093929190600401611e84565b6000604051808303816000875af11580156112ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113179190810190611eab565b505050505050565b606061090182334260405160200161133993929190611f18565b604051602081830303815290604052805190602001206113c7565b600054610100900460ff1661137b5760405162461bcd60e51b815260040161037c90611f57565b6105cc6113dc565b6060611397826001600160a01b031661140c565b6113a04661140c565b6040516020016113b1929190611fa2565b6040516020818303038152906040529050919050565b6060816040516020016113b191815260200190565b600054610100900460ff166114035760405162461bcd60e51b815260040161037c90611f57565b6105cc33610ee0565b60606109018261141b84611423565b600101610ce4565b600080608083901c1561143b5760809290921c916010015b604083901c156114505760409290921c916008015b602083901c156114655760209290921c916004015b601083901c1561147a5760109290921c916002015b600883901c156109015760010192915050565b6001600160a01b0381168114610ab457600080fd5b6000602082840312156114b457600080fd5b8135610e7f8161148d565b60005b838110156114da5781810151838201526020016114c2565b50506000910152565b600081518084526114fb8160208601602086016114bf565b601f01601f19169290920160200192915050565b602081526000610e7f60208301846114e3565b60008083601f84011261153457600080fd5b5081356001600160401b0381111561154b57600080fd5b60208301915083602082850101111561156357600080fd5b9250929050565b6000806020838503121561157d57600080fd5b82356001600160401b0381111561159357600080fd5b61159f85828601611522565b90969095509350505050565b803580151581146115bb57600080fd5b919050565b6000806000604084860312156115d557600080fd5b83356001600160401b038111156115eb57600080fd5b6115f786828701611522565b909450925061160a9050602085016115ab565b90509250925092565b6000806040838503121561162657600080fd5b82356116318161148d565b915061163f602084016115ab565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561168657611686611648565b604052919050565b60006001600160401b038211156116a7576116a7611648565b50601f01601f191660200190565b6000602082840312156116c757600080fd5b81356001600160401b038111156116dd57600080fd5b8201601f810184136116ee57600080fd5b80356117016116fc8261168e565b61165e565b81815285602083850101111561171657600080fd5b81602084016020830137600091810160200191909152949350505050565b60006001600160401b0382111561174d5761174d611648565b5060051b60200190565b600082601f83011261176857600080fd5b813560206117786116fc83611734565b82815260059290921b8401810191818101908684111561179757600080fd5b8286015b848110156117b9576117ac816115ab565b835291830191830161179b565b509695505050505050565b600080604083850312156117d757600080fd5b82356001600160401b03808211156117ee57600080fd5b818501915085601f83011261180257600080fd5b813560206118126116fc83611734565b82815260059290921b8401810191818101908984111561183157600080fd5b948201945b838610156118585785356118498161148d565b82529482019490820190611836565b9650508601359250508082111561186e57600080fd5b5061187b85828601611757565b9150509250929050565b60008060006060848603121561189a57600080fd5b833592506020840135915060408401356118b38161148d565b809150509250925092565b6000806000604084860312156118d357600080fd5b83356118de8161148d565b925060208401356001600160401b038111156118f957600080fd5b61190586828701611522565b9497909650939450505050565b6020808252600c908201526b3737ba10309036b2b6b132b960a11b604082015260600190565b600181811c9082168061194c57607f821691505b60208210810361196c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000815461197f81611938565b6001828116801561199757600181146119ac576119db565b60ff19841687528215158302870194506119db565b8560005260208060002060005b858110156119d25781548a8201529084019082016119b9565b50505082870194505b5050505092915050565b600085516119f7818460208a016114bf565b601760f91b908301908152611a0f6001820187611972565b905069173932b0b1ba34b7b71760b11b81528385600a83013760009301600a019283525090949350505050565b6202aa8160ed1b815260008251611a5a8160038501602087016114bf565b9190910160030192915050565b604081526000611a7a60408301856114e3565b8281036020840152611a8c81856114e3565b95945050505050565b6402227aba7160dd1b815260008251611ab58160058501602087016114bf565b9190910160050192915050565b600080600080600060a08688031215611ada57600080fd5b8551611ae58161148d565b809550506020808701519450604087015193506060870151611b068161148d565b60808801519093506001600160401b03811115611b2257600080fd5b8701601f81018913611b3357600080fd5b8051611b416116fc82611734565b81815260059190911b8201830190838101908b831115611b6057600080fd5b928401925b82841015611b87578351611b788161148d565b82529284019290840190611b65565b80955050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611bd757611bd7611baf565b5060010190565b8181038181111561090157610901611baf565b828152604060208201526000611c0a60408301846114e3565b949350505050565b60008451611c248184602089016114bf565b601760f91b908301908152611c3c6001820186611972565b905067173932b0b9b7b71760c11b81528351611c5f8160088401602088016114bf565b0160080195945050505050565b60008251611c7e8184602087016114bf565b9190910192915050565b60408152826040820152828460608301376000606084830101526000601f19601f85011682016060838203016020840152611cc660608201856114e3565b9695505050505050565b808202811582820484141761090157610901611baf565b8082018082111561090157610901611baf565b600081611d0957611d09611baf565b506000190190565b60008060008060808587031215611d2757600080fd5b8451611d328161148d565b8094505060208501519250604085015191506060850151611d528161148d565b939692955090935050565b601f82111561089e57600081815260208120601f850160051c81016020861015611d845750805b601f850160051c820191505b8181101561131757828155600101611d90565b81516001600160401b03811115611dbc57611dbc611648565b611dd081611dca8454611938565b84611d5d565b602080601f831160018114611e055760008415611ded5750858301515b600019600386901b1c1916600185901b178555611317565b600085815260208120601f198616915b82811015611e3457888601518255948401946001909101908401611e15565b5085821015611e525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611e7f57634e487b7160e01b600052601260045260246000fd5b500490565b60018060a01b0384168152826020820152606060408201526000611a8c60608301846114e3565b600060208284031215611ebd57600080fd5b81516001600160401b03811115611ed357600080fd5b8201601f81018413611ee457600080fd5b8051611ef26116fc8261168e565b818152856020838501011115611f0757600080fd5b611a8c8260208301602086016114bf565b60008451611f2a8184602089016114bf565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351611fb48184602088016114bf565b835190830190611fc88183602088016114bf565b0194935050505056fea26469706673582212202796ba3c62a7fc0cbb05638d4fd432b1d8107ee5bc30f85f432d5ce6bbdbf00a64736f6c63430008130033",
    "sourceMap": "234:1462:64:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014c5760003560e01c8063a4f9edbf116100c3578063caedeefd1161007c578063caedeefd14610303578063d2ca21151461030d578063d4b8399214610316578063e858d17514610329578063f12d5c8414610332578063f2fde38b1461033a57600080fd5b8063a4f9edbf14610284578063b50c99b714610297578063b8038b3e146102aa578063bf3506c1146102bd578063c5393163146102d0578063c6788bdd146102e357600080fd5b8063500cae4c11610115578063500cae4c1461021d57806357a02bdf14610232578063715018a6146102455780637666f1251461024d5780638da5cb5b14610260578063a1638f571461027157600080fd5b8062f5afa8146101515780631fb2f7121461016d5780632848aeaf146101a05780632d43fef1146101d357806340238a7614610208575b600080fd5b61015a61271081565b6040519081526020015b60405180910390f35b610188734a9a27d614a74ee5524909ca27bdbcbb7ed3b31581565b6040516001600160a01b039091168152602001610164565b6101c36101ae3660046114a2565b606b6020526000908152604090205460ff1681565b6040519015158152602001610164565b6101fb6040518060400160405280600981526020016821b7b7b5b4b2a530b960b91b81525081565b604051610164919061150f565b6101886dcd17345801aa8147b8d3950260ff81565b61023061022b36600461156a565b61034d565b005b6102306102403660046115c0565b610402565b6102306105ba565b61023061025b366004611613565b6105ce565b6033546001600160a01b0316610188565b606754610188906001600160a01b031681565b6102306102923660046116b5565b610601565b6102306102a53660046117c4565b6107c5565b6102306102b8366004611885565b6108a3565b6101c36102cb3660046114a2565b6108d5565b6102306102de3660046118be565b610907565b61015a6102f13660046114a2565b60696020526000908152604090205481565b61015a620f424081565b61015a60685481565b606a54610188906001600160a01b031681565b61015a60665481565b6101fb6109b0565b6102306103483660046114a2565b610a3e565b336000908152606b602052604090205460ff166103855760405162461bcd60e51b815260040161037c90611912565b60405180910390fd5b61038e33610ab7565b6103d55760405162461bcd60e51b81526020600482015260186024820152771b9bdd0818481d985b1a590818db185a5b481c195c9a5bd960421b604482015260640161037c565b3360008181526069602052604090204290556066546103f49190610b05565b6103fe8282610bf7565b5050565b336000908152606b602052604090205460ff166104315760405162461bcd60e51b815260040161037c90611912565b60006040518060400160405280600981526020016821b7b7b5b4b2a530b960b91b8152506065858560405160200161046c94939291906119e5565b60408051601f198184030181529190529050600061048b336014610ce4565b90508215610525576dcd17345801aa8147b8d3950260ff6001600160a01b0316630ae1b13d826040516020016104c19190611a3c565b604051602081830303815290604052846040518363ffffffff1660e01b81526004016104ee929190611a67565b600060405180830381600087803b15801561050857600080fd5b505af115801561051c573d6000803e3d6000fd5b505050506105b3565b6dcd17345801aa8147b8d3950260ff6001600160a01b0316630ae1b13d826040516020016105539190611a95565b604051602081830303815290604052846040518363ffffffff1660e01b8152600401610580929190611a67565b600060405180830381600087803b15801561059a57600080fd5b505af11580156105ae573d6000803e3d6000fd5b505050505b5050505050565b6105c2610e86565b6105cc6000610ee0565b565b6105d6610e86565b6001600160a01b03919091166000908152606b60205260409020805460ff1916911515919091179055565b600054610100900460ff16158080156106215750600054600160ff909116105b8061063b5750303b15801561063b575060005460ff166001145b61069e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161037c565b6000805460ff1916600117905580156106c1576000805461ff0019166101001790555b600080838060200190518101906106d89190611ac2565b606a80546001600160a01b0319166001600160a01b0387161790559395509293506107089250869150610f329050565b60005b8151811015610770576001606b600084848151811061072c5761072c611b99565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061076881611bc5565b91505061070b565b5061077a82610a3e565b505080156103fe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6107cd610e86565b805182511461081e5760405162461bcd60e51b815260206004820152601e60248201527f436f6f6b69654a6172363535313a206c656e677468206d69736d617463680000604482015260640161037c565b60005b825181101561089e5781818151811061083c5761083c611b99565b6020026020010151606b600085848151811061085a5761085a611b99565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061089681611bc5565b915050610821565b505050565b6108ab610e86565b606892909255606655606780546001600160a01b0319166001600160a01b03909216919091179055565b6001600160a01b0381166000908152606b602052604081205460ff168015610901575061090182610ab7565b92915050565b336000908152606b602052604090205460ff166109365760405162461bcd60e51b815260040161037c90611912565b61093f33610ab7565b6109865760405162461bcd60e51b81526020600482015260186024820152771b9bdd0818481d985b1a590818db185a5b481c195c9a5bd960421b604482015260640161037c565b3360009081526069602052604090204290556066546109a6908490610b05565b61089e8282610bf7565b606580546109bd90611938565b80601f01602080910402602001604051908101604052809291908181526020018280546109e990611938565b8015610a365780601f10610a0b57610100808354040283529160200191610a36565b820191906000526020600020905b815481529060010190602001808311610a1957829003601f168201915b505050505081565b610a46610e86565b6001600160a01b038116610aab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161037c565b610ab481610ee0565b50565b6068546001600160a01b038216600090815260696020526040812054909190610ae09042611bde565b1015806109015750506001600160a01b03166000908152606960205260409020541590565b606754610b1e90839083906001600160a01b0316610fd5565b816001600160a01b03167f2cc90d9a18273a3e516507485d7e22ae77eabb3724ab0f958ba528eb2e58505a82610bdd60658054610b5a90611938565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8690611938565b8015610bd35780601f10610ba857610100808354040283529160200191610bd3565b820191906000526020600020905b815481529060010190602001808311610bb657829003601f168201915b505050505061131f565b604051610beb929190611bf1565b60405180910390a25050565b60006040518060400160405280600981526020016821b7b7b5b4b2a530b960b91b8152506065610c2d60658054610b5a90611938565b604051602001610c3f93929190611c12565b60405160208183030381529060405290506dcd17345801aa8147b8d3950260ff6001600160a01b0316630ae1b13d848484604051602001610c809190611c6c565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610cad93929190611c88565b600060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b50505050505050565b60606000610cf3836002611cd0565b610cfe906002611ce7565b6001600160401b03811115610d1557610d15611648565b6040519080825280601f01601f191660200182016040528015610d3f576020820181803683370190505b509050600360fc1b81600081518110610d5a57610d5a611b99565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610d8957610d89611b99565b60200101906001600160f81b031916908160001a9053506000610dad846002611cd0565b610db8906001611ce7565b90505b6001811115610e30576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610dec57610dec611b99565b1a60f81b828281518110610e0257610e02611b99565b60200101906001600160f81b031916908160001a90535060049490941c93610e2981611cfa565b9050610dbb565b508315610e7f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161037c565b9392505050565b6033546001600160a01b031633146105cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161037c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600083806020019051810190610f4b9190611d11565b60688390556066829055606780546001600160a01b0319166001600160a01b03831617905591955093509150610f819050611354565b610f8a30611383565b606590610f979082611da3565b507f0ef8145310f85c28ca23a3aebc4f922ea5379c7c26988ed7477cb4480646ad0184604051610fc7919061150f565b60405180910390a150505050565b6000612710610fe7620f424085611e62565b610ff19190611cd0565b606a549091506001600160a01b039081169083166111365760408051602081018252600081529051633e6e012960e11b81526001600160a01b03831691637cdc02529161105991734a9a27d614a74ee5524909ca27bdbcbb7ed3b31591879190600401611e84565b6000604051808303816000875af1158015611078573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a09190810190611eab565b506001600160a01b038116637cdc0252866110bb8588611bde565b604051806020016040528060008152506040518463ffffffff1660e01b81526004016110e993929190611e84565b6000604051808303816000875af1158015611108573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111309190810190611eab565b506105b3565b604051734a9a27d614a74ee5524909ca27bdbcbb7ed3b31560601b6020820152603481018390526001600160a01b03821690637cdc025290859060009060540160408051601f19818403018152908290526111939160240161150f565b60408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b1790525160e085901b6001600160e01b03191681526111de93929190600401611e84565b6000604051808303816000875af11580156111fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112259190810190611eab565b506001600160a01b038116637cdc025284600088611243878a611bde565b60405160609290921b6bffffffffffffffffffffffff19166020830152603482015260540160408051601f19818403018152908290526112859160240161150f565b60408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b1790525160e085901b6001600160e01b03191681526112d093929190600401611e84565b6000604051808303816000875af11580156112ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113179190810190611eab565b505050505050565b606061090182334260405160200161133993929190611f18565b604051602081830303815290604052805190602001206113c7565b600054610100900460ff1661137b5760405162461bcd60e51b815260040161037c90611f57565b6105cc6113dc565b6060611397826001600160a01b031661140c565b6113a04661140c565b6040516020016113b1929190611fa2565b6040516020818303038152906040529050919050565b6060816040516020016113b191815260200190565b600054610100900460ff166114035760405162461bcd60e51b815260040161037c90611f57565b6105cc33610ee0565b60606109018261141b84611423565b600101610ce4565b600080608083901c1561143b5760809290921c916010015b604083901c156114505760409290921c916008015b602083901c156114655760209290921c916004015b601083901c1561147a5760109290921c916002015b600883901c156109015760010192915050565b6001600160a01b0381168114610ab457600080fd5b6000602082840312156114b457600080fd5b8135610e7f8161148d565b60005b838110156114da5781810151838201526020016114c2565b50506000910152565b600081518084526114fb8160208601602086016114bf565b601f01601f19169290920160200192915050565b602081526000610e7f60208301846114e3565b60008083601f84011261153457600080fd5b5081356001600160401b0381111561154b57600080fd5b60208301915083602082850101111561156357600080fd5b9250929050565b6000806020838503121561157d57600080fd5b82356001600160401b0381111561159357600080fd5b61159f85828601611522565b90969095509350505050565b803580151581146115bb57600080fd5b919050565b6000806000604084860312156115d557600080fd5b83356001600160401b038111156115eb57600080fd5b6115f786828701611522565b909450925061160a9050602085016115ab565b90509250925092565b6000806040838503121561162657600080fd5b82356116318161148d565b915061163f602084016115ab565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561168657611686611648565b604052919050565b60006001600160401b038211156116a7576116a7611648565b50601f01601f191660200190565b6000602082840312156116c757600080fd5b81356001600160401b038111156116dd57600080fd5b8201601f810184136116ee57600080fd5b80356117016116fc8261168e565b61165e565b81815285602083850101111561171657600080fd5b81602084016020830137600091810160200191909152949350505050565b60006001600160401b0382111561174d5761174d611648565b5060051b60200190565b600082601f83011261176857600080fd5b813560206117786116fc83611734565b82815260059290921b8401810191818101908684111561179757600080fd5b8286015b848110156117b9576117ac816115ab565b835291830191830161179b565b509695505050505050565b600080604083850312156117d757600080fd5b82356001600160401b03808211156117ee57600080fd5b818501915085601f83011261180257600080fd5b813560206118126116fc83611734565b82815260059290921b8401810191818101908984111561183157600080fd5b948201945b838610156118585785356118498161148d565b82529482019490820190611836565b9650508601359250508082111561186e57600080fd5b5061187b85828601611757565b9150509250929050565b60008060006060848603121561189a57600080fd5b833592506020840135915060408401356118b38161148d565b809150509250925092565b6000806000604084860312156118d357600080fd5b83356118de8161148d565b925060208401356001600160401b038111156118f957600080fd5b61190586828701611522565b9497909650939450505050565b6020808252600c908201526b3737ba10309036b2b6b132b960a11b604082015260600190565b600181811c9082168061194c57607f821691505b60208210810361196c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000815461197f81611938565b6001828116801561199757600181146119ac576119db565b60ff19841687528215158302870194506119db565b8560005260208060002060005b858110156119d25781548a8201529084019082016119b9565b50505082870194505b5050505092915050565b600085516119f7818460208a016114bf565b601760f91b908301908152611a0f6001820187611972565b905069173932b0b1ba34b7b71760b11b81528385600a83013760009301600a019283525090949350505050565b6202aa8160ed1b815260008251611a5a8160038501602087016114bf565b9190910160030192915050565b604081526000611a7a60408301856114e3565b8281036020840152611a8c81856114e3565b95945050505050565b6402227aba7160dd1b815260008251611ab58160058501602087016114bf565b9190910160050192915050565b600080600080600060a08688031215611ada57600080fd5b8551611ae58161148d565b809550506020808701519450604087015193506060870151611b068161148d565b60808801519093506001600160401b03811115611b2257600080fd5b8701601f81018913611b3357600080fd5b8051611b416116fc82611734565b81815260059190911b8201830190838101908b831115611b6057600080fd5b928401925b82841015611b87578351611b788161148d565b82529284019290840190611b65565b80955050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611bd757611bd7611baf565b5060010190565b8181038181111561090157610901611baf565b828152604060208201526000611c0a60408301846114e3565b949350505050565b60008451611c248184602089016114bf565b601760f91b908301908152611c3c6001820186611972565b905067173932b0b9b7b71760c11b81528351611c5f8160088401602088016114bf565b0160080195945050505050565b60008251611c7e8184602087016114bf565b9190910192915050565b60408152826040820152828460608301376000606084830101526000601f19601f85011682016060838203016020840152611cc660608201856114e3565b9695505050505050565b808202811582820484141761090157610901611baf565b8082018082111561090157610901611baf565b600081611d0957611d09611baf565b506000190190565b60008060008060808587031215611d2757600080fd5b8451611d328161148d565b8094505060208501519250604085015191506060850151611d528161148d565b939692955090935050565b601f82111561089e57600081815260208120601f850160051c81016020861015611d845750805b601f850160051c820191505b8181101561131757828155600101611d90565b81516001600160401b03811115611dbc57611dbc611648565b611dd081611dca8454611938565b84611d5d565b602080601f831160018114611e055760008415611ded5750858301515b600019600386901b1c1916600185901b178555611317565b600085815260208120601f198616915b82811015611e3457888601518255948401946001909101908401611e15565b5085821015611e525787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600082611e7f57634e487b7160e01b600052601260045260246000fd5b500490565b60018060a01b0384168152826020820152606060408201526000611a8c60608301846114e3565b600060208284031215611ebd57600080fd5b81516001600160401b03811115611ed357600080fd5b8201601f81018413611ee457600080fd5b8051611ef26116fc8261168e565b818152856020838501011115611f0757600080fd5b611a8c8260208301602086016114bf565b60008451611f2a8184602089016114bf565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351611fb48184602088016114bf565b835190830190611fc88183602088016114bf565b0194935050505056fea26469706673582212202796ba3c62a7fc0cbb05638d4fd432b1d8107ee5bc30f85f432d5ce6bbdbf00a64736f6c63430008130033",
    "sourceMap": "234:1462:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;414:51:79;;459:6;414:51;;;;;160:25:101;;;148:2;133:18;414:51:79;;;;;;;;528:88;;574:42;528:88;;;;;-1:-1:-1;;;;;360:32:101;;;342:51;;330:2;315:18;528:88:79;196:203:101;294:59:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;957:14:101;;950:22;932:41;;920:2;905:18;294:59:64;792:187:101;695:47:74;;;;;;;;;;;;;;;-1:-1:-1;;;695:47:74;;;;;;;;;;;;:::i;793:80::-;;831:42;793:80;;3159:324;;;;;;:::i;:::-;;:::i;:::-;;5564:557;;;;;;:::i;:::-;;:::i;2064:101:21:-;;;:::i;1242:125:64:-;;;;;;:::i;:::-;;:::i;1441:85:21:-;1513:6;;-1:-1:-1;;;;;1513:6:21;1441:85;;1113:26:74;;;;;-1:-1:-1;;;;;1113:26:74;;;360:495:64;;;;;;:::i;:::-;;:::i;1373:321::-;;;;;;:::i;:::-;;:::i;8669:231:74:-;;;;;;:::i;:::-;;:::i;6444:136::-;;;;;;:::i;:::-;;:::i;4158:352::-;;;;;;:::i;:::-;;:::i;1310:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;276:41:79;;314:3;276:41;;1203:27:74;;;;;;168:21:79;;;;;-1:-1:-1;;;;;168:21:79;;;1011:27:74;;;;;;920:24;;;:::i;2314:198:21:-;;;;;;:::i;:::-;;:::i;3159:324:74:-;3249:10;1188:4:64;1211:18;;;:9;:18;;;;;;;;3229:48:74;;;;-1:-1:-1;;;3229:48:74;;;;;;;:::i;:::-;;;;;;;;;3295:30;3314:10;3295:18;:30::i;:::-;3287:67;;;;-1:-1:-1;;;3287:67:74;;8308:2:101;3287:67:74;;;8290:21:101;8347:2;8327:18;;;8320:30;-1:-1:-1;;;8366:18:101;;;8359:54;8430:18;;3287:67:74;8106:348:101;3287:67:74;3372:10;3365:18;;;;:6;:18;;;;;3386:15;3365:36;;3434:12;;3411:36;;3372:10;3411;:36::i;:::-;3457:19;3468:7;;3457:10;:19::i;:::-;3159:324;;:::o;5564:557::-;5665:10;1188:4:64;1211:18;;;:9;:18;;;;;;;;5645:48:74;;;;-1:-1:-1;;;5645:48:74;;;;;;;:::i;:::-;5703:23;5743:10;;;;;;;;;;;;;-1:-1:-1;;;5743:10:74;;;5760;5786;;5729:68;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5729:68:74;;;;;;;;;;-1:-1:-1;5808:26:74;5837:53;5873:10;5887:2;5837:19;:53::i;:::-;5808:82;;5904:7;5900:215;;;831:42;-1:-1:-1;;;;;5927:25:74;;5974:12;5953:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;5989:9;5927:72;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:215;;;831:42;-1:-1:-1;;;;;6030:25:74;;6079:12;6056:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;6094:9;6030:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5900:215;5635:486;;5564:557;;;:::o;2064:101:21:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;1242:125:64:-;1334:13:21;:11;:13::i;:::-;-1:-1:-1;;;;;1328:19:64;;;::::1;;::::0;;;:9:::1;:19;::::0;;;;:32;;-1:-1:-1;;1328:32:64::1;::::0;::::1;;::::0;;;::::1;::::0;;1242:125::o;360:495::-;3279:19:22;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:22;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:22;1713:19:23;:23;;;3387:66:22;;-1:-1:-1;3436:12:22;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:22;;11999:2:101;3325:201:22;;;11981:21:101;12038:2;12018:18;;;12011:30;12077:34;12057:18;;;12050:62;-1:-1:-1;;;12128:18:101;;;12121:44;12182:19;;3325:201:22;11797:410:101;3325:201:22;3536:12;:16;;-1:-1:-1;;3536:16:22;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:22;;;;;3562:65;473:15:64::1;493:27:::0;547:21:::1;536:82;;;;;;;;;;;;:::i;:::-;628:6;:16:::0;;-1:-1:-1;;;;;;628:16:64::1;-1:-1:-1::0;;;;;628:16:64;::::1;;::::0;;;;-1:-1:-1;472:146:64;;-1:-1:-1;655:42:64::1;::::0;-1:-1:-1;675:21:64;;-1:-1:-1;655:19:64::1;::::0;-1:-1:-1;655:42:64:i:1;:::-;713:9;708:104;732:10;:17;728:1;:21;708:104;;;797:4;770:9;:24;780:10;791:1;780:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;770:24:64::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;770:24:64;:31;;-1:-1:-1;;770:31:64::1;::::0;::::1;;::::0;;;::::1;::::0;;751:3;::::1;::::0;::::1;:::i;:::-;;;;708:104;;;;822:26;840:7;822:17;:26::i;:::-;462:393;;3651:14:22::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:22;;;3721:14;;-1:-1:-1;14137:36:101;;3721:14:22;;14125:2:101;14110:18;3721:14:22;;;;;;;3269:483;360:495:64;:::o;1373:321::-;1334:13:21;:11;:13::i;:::-;1511:11:64::1;:18;1490:10;:17;:39;1482:82;;;::::0;-1:-1:-1;;;1482:82:64;;14386:2:101;1482:82:64::1;::::0;::::1;14368:21:101::0;14425:2;14405:18;;;14398:30;14464:32;14444:18;;;14437:60;14514:18;;1482:82:64::1;14184:354:101::0;1482:82:64::1;1579:9;1574:114;1598:10;:17;1594:1;:21;1574:114;;;1663:11;1675:1;1663:14;;;;;;;;:::i;:::-;;;;;;;1636:9;:24;1646:10;1657:1;1646:13;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;1636:24:64::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;1636:24:64;:41;;-1:-1:-1;;1636:41:64::1;::::0;::::1;;::::0;;;::::1;::::0;;1617:3;::::1;::::0;::::1;:::i;:::-;;;;1574:114;;;;1373:321:::0;;:::o;8669:231:74:-;1334:13:21;:11;:13::i;:::-;8791:12:74::1;:28:::0;;;;8829:12:::1;:28:::0;8867:11:::1;:26:::0;;-1:-1:-1;;;;;;8867:26:74::1;-1:-1:-1::0;;;;;8867:26:74;;::::1;::::0;;;::::1;::::0;;8669:231::o;6444:136::-;-1:-1:-1;;;;;1211:18:64;;6497:12:74;1211:18:64;;;:9;:18;;;;;;;;6528:45:74;;;;;6549:24;6568:4;6549:18;:24::i;:::-;6521:52;6444:136;-1:-1:-1;;6444:136:74:o;4158:352::-;4271:10;1188:4:64;1211:18;;;:9;:18;;;;;;;;4251:48:74;;;;-1:-1:-1;;;4251:48:74;;;;;;;:::i;:::-;4317:30;4336:10;4317:18;:30::i;:::-;4309:67;;;;-1:-1:-1;;;4309:67:74;;8308:2:101;4309:67:74;;;8290:21:101;8347:2;8327:18;;;8320:30;-1:-1:-1;;;8366:18:101;;;8359:54;8430:18;;4309:67:74;8106:348:101;4309:67:74;4394:10;4387:18;;;;:6;:18;;;;;4408:15;4387:36;;4460:12;;4434:39;;4445:13;;4434:10;:39::i;:::-;4484:19;4495:7;;4484:10;:19::i;920:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2314:198:21:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:21;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:21;;14745:2:101;2394:73:21::1;::::0;::::1;14727:21:101::0;14784:2;14764:18;;;14757:30;14823:34;14803:18;;;14796:62;-1:-1:-1;;;14874:18:101;;;14867:36;14920:19;;2394:73:21::1;14543:402:101::0;2394:73:21::1;2477:28;2496:8;2477:18;:28::i;:::-;2314:198:::0;:::o;7358:162:74:-;7480:12;;-1:-1:-1;;;;;7464:12:74;;7423:4;7464:12;;;:6;:12;;;;;;7423:4;;7480:12;7446:30;;:15;:30;:::i;:::-;:46;;:67;;;-1:-1:-1;;;;;;;7496:12:74;;;;;:6;:12;;;;;;:17;;7358:162::o;861:251:64:-;1007:11;;963:56;;984:13;;999:6;;-1:-1:-1;;;;;1007:11:64;963:20;:56::i;:::-;1045:13;-1:-1:-1;;;;;1034:71:64;;1060:6;1068:36;1093:10;1068:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;:36::i;:::-;1034:71;;;;;;;:::i;:::-;;;;;;;;861:251;;:::o;7923:272:74:-;7987:23;8039:10;;;;;;;;;;;;;-1:-1:-1;;;8039:10:74;;;8056;8080:36;8105:10;8080:36;;;;;:::i;:::-;8025:92;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7987:130;;831:42;-1:-1:-1;;;;;8128:25:74;;8154:7;;8177:9;8163:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;8128:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7977:218;7923:272;;:::o;1818:437:43:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:43;;1918:47;;-1:-1:-1;;;1975:6:43;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:43;;;;;;;;;-1:-1:-1;;;2000:6:43;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:43;;;;;;;;-1:-1:-1;2030:9:43;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:43;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:43;;;;;;;;-1:-1:-1;2141:1:43;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:43;;2162:55;;;;-1:-1:-1;;;2162:55:43;;17749:2:101;2162:55:43;;;17731:21:101;;;17768:18;;;17761:30;17827:34;17807:18;;;17800:62;17879:18;;2162:55:43;17547:356:101;2162:55:43;2241:6;1818:437;-1:-1:-1;;;1818:437:43:o;1599:130:21:-;1513:6;;-1:-1:-1;;;;;1513:6:21;929:10:24;1662:23:21;1654:68;;;;-1:-1:-1;;;1654:68:21;;18110:2:101;1654:68:21;;;18092:21:101;;;18129:18;;;18122:30;18188:34;18168:18;;;18161:62;18240:18;;1654:68:21;17908:356:101;2666:187:21;2758:6;;;-1:-1:-1;;;;;2774:17:21;;;-1:-1:-1;;;;;;2774:17:21;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;2121:489:74:-;2200:21;2223;2246:20;2293:21;2282:71;;;;;;;;;;;;:::i;:::-;2364:12;:28;;;2402:12;:28;;;2440:11;:26;;-1:-1:-1;;;;;;2440:26:74;-1:-1:-1;;;;;2440:26:74;;;;;2364:28;;-1:-1:-1;2402:28:74;-1:-1:-1;2440:26:74;-1:-1:-1;2477:16:74;;-1:-1:-1;2477:14:74;:16::i;:::-;2517:42;2553:4;2517:27;:42::i;:::-;2504:10;;:55;;:10;:55;:::i;:::-;;2575:28;2581:21;2575:28;;;;;;:::i;:::-;;;;;;;;2187:423;;;2121:489;:::o;623:926:79:-;722:11;459:6;737:20;314:3;737:6;:20;:::i;:::-;736:43;;;;:::i;:::-;845:6;;722:57;;-1:-1:-1;;;;;;845:6:79;;;;868:25;;864:679;;969:9;;;;;;;;-1:-1:-1;969:9:79;;909:70;;-1:-1:-1;;;909:70:79;;-1:-1:-1;;;;;909:33:79;;;;;:70;;574:42;;964:3;;969:9;909:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;909:70:79;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;993:33:79;;;1027:13;1042:12;1051:3;1042:6;:12;:::i;:::-;1056:9;;;;;;;;;;;;993:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;993:73:79;;;;;;;;;;;;:::i;:::-;;864:679;;;1249:42;;-1:-1:-1;;;1249:42:79;;;22521:66:101;22603:12;;;22596:28;;;-1:-1:-1;;;;;1097:33:79;;;;;1148:11;;1177:1;;22640:12:101;;1249:42:79;;;-1:-1:-1;;1249:42:79;;;;;;;;;;1196:96;;;;;:::i;:::-;;;;-1:-1:-1;;1196:96:79;;;;;;;;;;;;;;-1:-1:-1;;;;;1196:96:79;-1:-1:-1;;;1196:96:79;;;1097:209;;;;;-1:-1:-1;;;;;;1097:209:79;;;;;;;1196:96;1097:209;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1097:209:79;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1320:33:79;;;1371:11;1400:1;1489:13;1504:12;1513:3;1504:6;:12;:::i;:::-;1472:45;;22541:2:101;22537:15;;;;-1:-1:-1;;22533:53:101;1472:45:79;;;22521:66:101;22603:12;;;22596:28;22640:12;;1472:45:79;;;-1:-1:-1;;1472:45:79;;;;;;;;;;1419:99;;;;;:::i;:::-;;;;-1:-1:-1;;1419:99:79;;;;;;;;;;;;;;-1:-1:-1;;;;;1419:99:79;-1:-1:-1;;;1419:99:79;;;1320:212;;;;;-1:-1:-1;;;;;;1320:212:79;;;;;;;1419:99;1320:212;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:212:79;;;;;;;;;;;;:::i;:::-;;712:837;;623:926;;;:::o;526:199:86:-;599:13;631:87;674:12;688:10;700:15;657:59;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;647:70;;;;;;631:15;:87::i;1003:95:21:-;5374:13:22;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:22;;;;;;;:::i;:::-;1065:26:21::1;:24;:26::i;305:215:86:-:0;376:13;432:43;460:13;-1:-1:-1;;;;;432:43:86;:19;:43::i;:::-;477:34;497:13;477:19;:34::i;:::-;415:97;;;;;;;;;:::i;:::-;;;;;;;;;;;;;401:112;;305:215;;;:::o;1090:126::-;1149:13;1205:2;1188:20;;;;;;24606:19:101;;24650:2;24641:12;;24477:182;1104:111:21;5374:13:22;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:22;;;;;;;:::i;:::-;1176:32:21::1;929:10:24::0;1176:18:21::1;:32::i;1521:174:43:-:0;1580:13;1636:42;1648:5;1655:18;1667:5;1655:11;:18::i;:::-;1676:1;1655:22;1636:11;:42::i;11708:663:48:-;11762:7;;11846:3;11837:12;;;:16;11833:98;;11883:3;11873:13;;;;;11914:2;11904:12;11833:98;11957:2;11948:11;;;:15;11944:95;;11993:2;11983:12;;;;;12023:1;12013:11;11944:95;12065:2;12056:11;;;:15;12052:95;;12101:2;12091:12;;;;;12131:1;12121:11;12052:95;12173:2;12164:11;;;:15;12160:95;;12209:2;12199:12;;;;;12239:1;12229:11;12160:95;12281:1;12272:10;;;:14;12268:64;;12316:1;12306:11;12358:6;11708:663;-1:-1:-1;;11708:663:48:o;404:131:101:-;-1:-1:-1;;;;;479:31:101;;469:42;;459:70;;525:1;522;515:12;540:247;599:6;652:2;640:9;631:7;627:23;623:32;620:52;;;668:1;665;658:12;620:52;707:9;694:23;726:31;751:5;726:31;:::i;984:250::-;1069:1;1079:113;1093:6;1090:1;1087:13;1079:113;;;1169:11;;;1163:18;1150:11;;;1143:39;1115:2;1108:10;1079:113;;;-1:-1:-1;;1226:1:101;1208:16;;1201:27;984:250::o;1239:271::-;1281:3;1319:5;1313:12;1346:6;1341:3;1334:19;1362:76;1431:6;1424:4;1419:3;1415:14;1408:4;1401:5;1397:16;1362:76;:::i;:::-;1492:2;1471:15;-1:-1:-1;;1467:29:101;1458:39;;;;1499:4;1454:50;;1239:271;-1:-1:-1;;1239:271:101:o;1515:220::-;1664:2;1653:9;1646:21;1627:4;1684:45;1725:2;1714:9;1710:18;1702:6;1684:45;:::i;1740:348::-;1792:8;1802:6;1856:3;1849:4;1841:6;1837:17;1833:27;1823:55;;1874:1;1871;1864:12;1823:55;-1:-1:-1;1897:20:101;;-1:-1:-1;;;;;1929:30:101;;1926:50;;;1972:1;1969;1962:12;1926:50;2009:4;2001:6;1997:17;1985:29;;2061:3;2054:4;2045:6;2037;2033:19;2029:30;2026:39;2023:59;;;2078:1;2075;2068:12;2023:59;1740:348;;;;;:::o;2093:411::-;2164:6;2172;2225:2;2213:9;2204:7;2200:23;2196:32;2193:52;;;2241:1;2238;2231:12;2193:52;2281:9;2268:23;-1:-1:-1;;;;;2306:6:101;2303:30;2300:50;;;2346:1;2343;2336:12;2300:50;2385:59;2436:7;2427:6;2416:9;2412:22;2385:59;:::i;:::-;2463:8;;2359:85;;-1:-1:-1;2093:411:101;-1:-1:-1;;;;2093:411:101:o;2509:160::-;2574:20;;2630:13;;2623:21;2613:32;;2603:60;;2659:1;2656;2649:12;2603:60;2509:160;;;:::o;2674:479::-;2751:6;2759;2767;2820:2;2808:9;2799:7;2795:23;2791:32;2788:52;;;2836:1;2833;2826:12;2788:52;2876:9;2863:23;-1:-1:-1;;;;;2901:6:101;2898:30;2895:50;;;2941:1;2938;2931:12;2895:50;2980:59;3031:7;3022:6;3011:9;3007:22;2980:59;:::i;:::-;3058:8;;-1:-1:-1;2954:85:101;-1:-1:-1;3112:35:101;;-1:-1:-1;3143:2:101;3128:18;;3112:35;:::i;:::-;3102:45;;2674:479;;;;;:::o;3158:315::-;3223:6;3231;3284:2;3272:9;3263:7;3259:23;3255:32;3252:52;;;3300:1;3297;3290:12;3252:52;3339:9;3326:23;3358:31;3383:5;3358:31;:::i;:::-;3408:5;-1:-1:-1;3432:35:101;3463:2;3448:18;;3432:35;:::i;:::-;3422:45;;3158:315;;;;;:::o;3478:127::-;3539:10;3534:3;3530:20;3527:1;3520:31;3570:4;3567:1;3560:15;3594:4;3591:1;3584:15;3610:275;3681:2;3675:9;3746:2;3727:13;;-1:-1:-1;;3723:27:101;3711:40;;-1:-1:-1;;;;;3766:34:101;;3802:22;;;3763:62;3760:88;;;3828:18;;:::i;:::-;3864:2;3857:22;3610:275;;-1:-1:-1;3610:275:101:o;3890:186::-;3938:4;-1:-1:-1;;;;;3963:6:101;3960:30;3957:56;;;3993:18;;:::i;:::-;-1:-1:-1;4059:2:101;4038:15;-1:-1:-1;;4034:29:101;4065:4;4030:40;;3890:186::o;4081:671::-;4149:6;4202:2;4190:9;4181:7;4177:23;4173:32;4170:52;;;4218:1;4215;4208:12;4170:52;4258:9;4245:23;-1:-1:-1;;;;;4283:6:101;4280:30;4277:50;;;4323:1;4320;4313:12;4277:50;4346:22;;4399:4;4391:13;;4387:27;-1:-1:-1;4377:55:101;;4428:1;4425;4418:12;4377:55;4464:2;4451:16;4489:48;4505:31;4533:2;4505:31;:::i;:::-;4489:48;:::i;:::-;4560:2;4553:5;4546:17;4600:7;4595:2;4590;4586;4582:11;4578:20;4575:33;4572:53;;;4621:1;4618;4611:12;4572:53;4676:2;4671;4667;4663:11;4658:2;4651:5;4647:14;4634:45;4720:1;4699:14;;;4715:2;4695:23;4688:34;;;;4703:5;4081:671;-1:-1:-1;;;;4081:671:101:o;4757:183::-;4817:4;-1:-1:-1;;;;;4842:6:101;4839:30;4836:56;;;4872:18;;:::i;:::-;-1:-1:-1;4917:1:101;4913:14;4929:4;4909:25;;4757:183::o;4945:662::-;4996:5;5049:3;5042:4;5034:6;5030:17;5026:27;5016:55;;5067:1;5064;5057:12;5016:55;5103:6;5090:20;5129:4;5153:60;5169:43;5209:2;5169:43;:::i;5153:60::-;5247:15;;;5333:1;5329:10;;;;5317:23;;5313:32;;;5278:12;;;;5357:15;;;5354:35;;;5385:1;5382;5375:12;5354:35;5421:2;5413:6;5409:15;5433:145;5449:6;5444:3;5441:15;5433:145;;;5515:20;5531:3;5515:20;:::i;:::-;5503:33;;5556:12;;;;5466;;5433:145;;;-1:-1:-1;5596:5:101;4945:662;-1:-1:-1;;;;;;4945:662:101:o;5612:1209::-;5727:6;5735;5788:2;5776:9;5767:7;5763:23;5759:32;5756:52;;;5804:1;5801;5794:12;5756:52;5844:9;5831:23;-1:-1:-1;;;;;5914:2:101;5906:6;5903:14;5900:34;;;5930:1;5927;5920:12;5900:34;5968:6;5957:9;5953:22;5943:32;;6013:7;6006:4;6002:2;5998:13;5994:27;5984:55;;6035:1;6032;6025:12;5984:55;6071:2;6058:16;6093:4;6117:60;6133:43;6173:2;6133:43;:::i;6117:60::-;6211:15;;;6293:1;6289:10;;;;6281:19;;6277:28;;;6242:12;;;;6317:19;;;6314:39;;;6349:1;6346;6339:12;6314:39;6373:11;;;;6393:217;6409:6;6404:3;6401:15;6393:217;;;6489:3;6476:17;6506:31;6531:5;6506:31;:::i;:::-;6550:18;;6426:12;;;;6588;;;;6393:217;;;6629:5;-1:-1:-1;;6672:18:101;;6659:32;;-1:-1:-1;;6703:16:101;;;6700:36;;;6732:1;6729;6722:12;6700:36;;6755:60;6807:7;6796:8;6785:9;6781:24;6755:60;:::i;:::-;6745:70;;;5612:1209;;;;;:::o;6826:383::-;6903:6;6911;6919;6972:2;6960:9;6951:7;6947:23;6943:32;6940:52;;;6988:1;6985;6978:12;6940:52;7024:9;7011:23;7001:33;;7081:2;7070:9;7066:18;7053:32;7043:42;;7135:2;7124:9;7120:18;7107:32;7148:31;7173:5;7148:31;:::i;:::-;7198:5;7188:15;;;6826:383;;;;;:::o;7214:546::-;7294:6;7302;7310;7363:2;7351:9;7342:7;7338:23;7334:32;7331:52;;;7379:1;7376;7369:12;7331:52;7418:9;7405:23;7437:31;7462:5;7437:31;:::i;:::-;7487:5;-1:-1:-1;7543:2:101;7528:18;;7515:32;-1:-1:-1;;;;;7559:30:101;;7556:50;;;7602:1;7599;7592:12;7556:50;7641:59;7692:7;7683:6;7672:9;7668:22;7641:59;:::i;:::-;7214:546;;7719:8;;-1:-1:-1;7615:85:101;;-1:-1:-1;;;;7214:546:101:o;7765:336::-;7967:2;7949:21;;;8006:2;7986:18;;;7979:30;-1:-1:-1;;;8040:2:101;8025:18;;8018:42;8092:2;8077:18;;7765:336::o;8459:380::-;8538:1;8534:12;;;;8581;;;8602:61;;8656:4;8648:6;8644:17;8634:27;;8602:61;8709:2;8701:6;8698:14;8678:18;8675:38;8672:161;;8755:10;8750:3;8746:20;8743:1;8736:31;8790:4;8787:1;8780:15;8818:4;8815:1;8808:15;8672:161;;8459:380;;;:::o;8970:722::-;9020:3;9061:5;9055:12;9090:36;9116:9;9090:36;:::i;:::-;9145:1;9162:18;;;9189:133;;;;9336:1;9331:355;;;;9155:531;;9189:133;-1:-1:-1;;9222:24:101;;9210:37;;9295:14;;9288:22;9276:35;;9267:45;;;-1:-1:-1;9189:133:101;;9331:355;9362:5;9359:1;9352:16;9391:4;9436:2;9433:1;9423:16;9461:1;9475:165;9489:6;9486:1;9483:13;9475:165;;;9567:14;;9554:11;;;9547:35;9610:16;;;;9504:10;;9475:165;;;9479:3;;;9669:6;9664:3;9660:16;9653:23;;9155:531;;;;;8970:722;;;;:::o;9697:851::-;10112:3;10150:6;10144:13;10166:66;10225:6;10220:3;10213:4;10205:6;10201:17;10166:66;:::i;:::-;-1:-1:-1;;;10254:16:101;;;10279:18;;;10319:48;10364:1;10353:13;;10345:6;10319:48;:::i;:::-;10306:61;;-1:-1:-1;;;10383:5:101;10376:27;10449:6;10441;10436:2;10429:5;10425:14;10412:44;10522:1;10479:18;;10499:2;10475:27;10511:13;;;-1:-1:-1;10475:27:101;;9697:851;-1:-1:-1;;;;9697:851:101:o;10553:422::-;-1:-1:-1;;;10799:3:101;10792:18;10774:3;10839:6;10833:13;10855:74;10922:6;10918:1;10913:3;10909:11;10902:4;10894:6;10890:17;10855:74;:::i;:::-;10949:16;;;;10967:1;10945:24;;10553:422;-1:-1:-1;;10553:422:101:o;10980:383::-;11177:2;11166:9;11159:21;11140:4;11203:45;11244:2;11233:9;11229:18;11221:6;11203:45;:::i;:::-;11296:9;11288:6;11284:22;11279:2;11268:9;11264:18;11257:50;11324:33;11350:6;11342;11324:33;:::i;:::-;11316:41;10980:383;-1:-1:-1;;;;;10980:383:101:o;11368:424::-;-1:-1:-1;;;11614:3:101;11607:20;11589:3;11656:6;11650:13;11672:74;11739:6;11735:1;11730:3;11726:11;11719:4;11711:6;11707:17;11672:74;:::i;:::-;11766:16;;;;11784:1;11762:24;;11368:424;-1:-1:-1;;11368:424:101:o;12212:1364::-;12359:6;12367;12375;12383;12391;12444:3;12432:9;12423:7;12419:23;12415:33;12412:53;;;12461:1;12458;12451:12;12412:53;12493:9;12487:16;12512:31;12537:5;12512:31;:::i;:::-;12562:5;12552:15;;;12586:2;12628;12617:9;12613:18;12607:25;12597:35;;12672:2;12661:9;12657:18;12651:25;12641:35;;12721:2;12710:9;12706:18;12700:25;12734:33;12759:7;12734:33;:::i;:::-;12837:3;12822:19;;12816:26;12786:7;;-1:-1:-1;;;;;;12854:30:101;;12851:50;;;12897:1;12894;12887:12;12851:50;12920:22;;12973:4;12965:13;;12961:27;-1:-1:-1;12951:55:101;;13002:1;12999;12992:12;12951:55;13031:2;13025:9;13054:60;13070:43;13110:2;13070:43;:::i;13054:60::-;13148:15;;;13230:1;13226:10;;;;13218:19;;13214:28;;;13179:12;;;;13254:19;;;13251:39;;;13286:1;13283;13276:12;13251:39;13310:11;;;;13330:216;13346:6;13341:3;13338:15;13330:216;;;13421:3;13415:10;13438:33;13463:7;13438:33;:::i;:::-;13484:20;;13363:12;;;;13524;;;;13330:216;;;13565:5;13555:15;;;;;;;12212:1364;;;;;;;;:::o;13581:127::-;13642:10;13637:3;13633:20;13630:1;13623:31;13673:4;13670:1;13663:15;13697:4;13694:1;13687:15;13713:127;13774:10;13769:3;13765:20;13762:1;13755:31;13805:4;13802:1;13795:15;13829:4;13826:1;13819:15;13845:135;13884:3;13905:17;;;13902:43;;13925:18;;:::i;:::-;-1:-1:-1;13972:1:101;13961:13;;13845:135::o;14950:128::-;15017:9;;;15038:11;;;15035:37;;;15052:18;;:::i;15083:291::-;15260:6;15249:9;15242:25;15303:2;15298;15287:9;15283:18;15276:30;15223:4;15323:45;15364:2;15353:9;15349:18;15341:6;15323:45;:::i;:::-;15315:53;15083:291;-1:-1:-1;;;;15083:291:101:o;15379:868::-;15783:3;15821:6;15815:13;15837:66;15896:6;15891:3;15884:4;15876:6;15872:17;15837:66;:::i;:::-;-1:-1:-1;;;15925:16:101;;;15950:18;;;15990:48;16035:1;16024:13;;16016:6;15990:48;:::i;:::-;15977:61;;-1:-1:-1;;;16054:5:101;16047:25;16103:6;16097:13;16119:78;16188:8;16184:1;16177:5;16173:13;16166:4;16158:6;16154:17;16119:78;:::i;:::-;16217:20;16239:1;16213:28;;15379:868;-1:-1:-1;;;;;15379:868:101:o;16252:289::-;16383:3;16421:6;16415:13;16437:66;16496:6;16491:3;16484:4;16476:6;16472:17;16437:66;:::i;:::-;16519:16;;;;;16252:289;-1:-1:-1;;16252:289:101:o;16546:552::-;16753:2;16742:9;16735:21;16792:6;16787:2;16776:9;16772:18;16765:34;16849:6;16841;16836:2;16825:9;16821:18;16808:48;16905:1;16900:2;16891:6;16880:9;16876:22;16872:31;16865:42;16716:4;16966:2;16962:7;16957:2;16949:6;16945:15;16941:29;16930:9;16926:45;17033:2;17021:9;17017:2;17013:18;17009:27;17002:4;16991:9;16987:20;16980:57;17054:38;17088:2;17084;17080:11;17072:6;17054:38;:::i;:::-;17046:46;16546:552;-1:-1:-1;;;;;;16546:552:101:o;17103:168::-;17176:9;;;17207;;17224:15;;;17218:22;;17204:37;17194:71;;17245:18;;:::i;17276:125::-;17341:9;;;17362:10;;;17359:36;;;17375:18;;:::i;17406:136::-;17445:3;17473:5;17463:39;;17482:18;;:::i;:::-;-1:-1:-1;;;17518:18:101;;17406:136::o;18269:524::-;18382:6;18390;18398;18406;18459:3;18447:9;18438:7;18434:23;18430:33;18427:53;;;18476:1;18473;18466:12;18427:53;18508:9;18502:16;18527:31;18552:5;18527:31;:::i;:::-;18577:5;18567:15;;;18622:2;18611:9;18607:18;18601:25;18591:35;;18666:2;18655:9;18651:18;18645:25;18635:35;;18715:2;18704:9;18700:18;18694:25;18728:33;18753:7;18728:33;:::i;:::-;18269:524;;;;-1:-1:-1;18269:524:101;;-1:-1:-1;;18269:524:101:o;18798:545::-;18900:2;18895:3;18892:11;18889:448;;;18936:1;18961:5;18957:2;18950:17;19006:4;19002:2;18992:19;19076:2;19064:10;19060:19;19057:1;19053:27;19047:4;19043:38;19112:4;19100:10;19097:20;19094:47;;;-1:-1:-1;19135:4:101;19094:47;19190:2;19185:3;19181:12;19178:1;19174:20;19168:4;19164:31;19154:41;;19245:82;19263:2;19256:5;19253:13;19245:82;;;19308:17;;;19289:1;19278:13;19245:82;;19519:1352;19645:3;19639:10;-1:-1:-1;;;;;19664:6:101;19661:30;19658:56;;;19694:18;;:::i;:::-;19723:97;19813:6;19773:38;19805:4;19799:11;19773:38;:::i;:::-;19767:4;19723:97;:::i;:::-;19875:4;;19939:2;19928:14;;19956:1;19951:663;;;;20658:1;20675:6;20672:89;;;-1:-1:-1;20727:19:101;;;20721:26;20672:89;-1:-1:-1;;19476:1:101;19472:11;;;19468:24;19464:29;19454:40;19500:1;19496:11;;;19451:57;20774:81;;19921:944;;19951:663;8917:1;8910:14;;;8954:4;8941:18;;-1:-1:-1;;19987:20:101;;;20105:236;20119:7;20116:1;20113:14;20105:236;;;20208:19;;;20202:26;20187:42;;20300:27;;;;20268:1;20256:14;;;;20135:19;;20105:236;;;20109:3;20369:6;20360:7;20357:19;20354:201;;;20430:19;;;20424:26;-1:-1:-1;;20513:1:101;20509:14;;;20525:3;20505:24;20501:37;20497:42;20482:58;20467:74;;20354:201;-1:-1:-1;;;;;20601:1:101;20585:14;;;20581:22;20568:36;;-1:-1:-1;19519:1352:101:o;21099:217::-;21139:1;21165;21155:132;;21209:10;21204:3;21200:20;21197:1;21190:31;21244:4;21241:1;21234:15;21272:4;21269:1;21262:15;21155:132;-1:-1:-1;21301:9:101;;21099:217::o;21321:386::-;21553:1;21549;21544:3;21540:11;21536:19;21528:6;21524:32;21513:9;21506:51;21593:6;21588:2;21577:9;21573:18;21566:34;21636:2;21631;21620:9;21616:18;21609:30;21487:4;21656:45;21697:2;21686:9;21682:18;21674:6;21656:45;:::i;21712:647::-;21791:6;21844:2;21832:9;21823:7;21819:23;21815:32;21812:52;;;21860:1;21857;21850:12;21812:52;21893:9;21887:16;-1:-1:-1;;;;;21918:6:101;21915:30;21912:50;;;21958:1;21955;21948:12;21912:50;21981:22;;22034:4;22026:13;;22022:27;-1:-1:-1;22012:55:101;;22063:1;22060;22053:12;22012:55;22092:2;22086:9;22117:48;22133:31;22161:2;22133:31;:::i;22117:48::-;22188:2;22181:5;22174:17;22228:7;22223:2;22218;22214;22210:11;22206:20;22203:33;22200:53;;;22249:1;22246;22239:12;22200:53;22262:67;22326:2;22321;22314:5;22310:14;22305:2;22301;22297:11;22262:67;:::i;23062:497::-;23249:3;23287:6;23281:13;23303:66;23362:6;23357:3;23350:4;23342:6;23338:17;23303:66;:::i;:::-;23438:2;23434:15;;;;-1:-1:-1;;23430:53:101;23391:16;;;;23416:68;;;23511:2;23500:14;;23493:30;;;;23550:2;23539:14;;23062:497;-1:-1:-1;;23062:497:101:o;23564:407::-;23766:2;23748:21;;;23805:2;23785:18;;;23778:30;23844:34;23839:2;23824:18;;23817:62;-1:-1:-1;;;23910:2:101;23895:18;;23888:41;23961:3;23946:19;;23564:407::o;23976:496::-;24155:3;24193:6;24187:13;24209:66;24268:6;24263:3;24256:4;24248:6;24244:17;24209:66;:::i;:::-;24338:13;;24297:16;;;;24360:70;24338:13;24297:16;24407:4;24395:17;;24360:70;:::i;:::-;24446:20;;23976:496;-1:-1:-1;;;;23976:496:101:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "PERC_POINTS()": "caedeefd",
    "POSTER_ADDR()": "40238a76",
    "POSTER_TAG()": "2d43fef1",
    "POSTER_UID()": "f12d5c84",
    "SUSTAINABILITY_ADDR()": "1fb2f712",
    "SUSTAINABILITY_FEE()": "00f5afa8",
    "allowList(address)": "2848aeaf",
    "assessReason(string,bool)": "57a02bdf",
    "batchAllowList(address[],bool[])": "b50c99b7",
    "canClaim(address)": "bf3506c1",
    "claims(address)": "c6788bdd",
    "cookieAmount()": "e858d175",
    "cookieToken()": "a1638f57",
    "owner()": "8da5cb5b",
    "periodLength()": "d2ca2115",
    "reachInJar(address,string)": "c5393163",
    "reachInJar(string)": "500cae4c",
    "renounceOwnership()": "715018a6",
    "setAllowList(address,bool)": "7666f125",
    "setConfig(uint256,uint256,address)": "b8038b3e",
    "setUp(bytes)": "a4f9edbf",
    "target()": "d4b83992",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cookieMonster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_uid\",\"type\":\"string\"}],\"name\":\"GiveCookie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"initializationParams\",\"type\":\"bytes\"}],\"name\":\"Setup\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERC_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POSTER_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POSTER_TAG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POSTER_UID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSTAINABILITY_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUSTAINABILITY_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"allowed\",\"type\":\"address\"}],\"name\":\"allowList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAllowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_cookieUid\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_isGood\",\"type\":\"bool\"}],\"name\":\"assessReason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isAlloweds\",\"type\":\"bool[]\"}],\"name\":\"batchAllowList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"claims\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dateTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cookieAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cookieToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"reachInJar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cookieMonster\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"reachInJar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isAllowed\",\"type\":\"bool\"}],\"name\":\"setAllowList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_cookieAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_cookieToken\",\"type\":\"address\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initializationParams\",\"type\":\"bytes\"}],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"GiveCookie(address,uint256,string)\":{\"details\":\"Emitted when a \\\"cookie\\\" is given to an address.\",\"params\":{\"amount\":\"The amount of cookie given.\",\"cookieMonster\":\"The address receiving the cookie.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Setup(bytes)\":{\"details\":\"Emitted when the contract is set up.\",\"params\":{\"initializationParams\":\"The parameters used for initialization.\"}}},\"kind\":\"dev\",\"methods\":{\"assessReason(string,bool)\":{\"details\":\"The member can give a thumbs up or thumbs down to a claim reason. The assessment is posted to the Poster contract.\",\"params\":{\"_cookieUid\":\"The unique identifier of the claim reason to be assessed.\",\"_isGood\":\"A boolean indicating whether the assessment is positive (true) or negative (false).  {    tag: CookieJar.<jar_uid>.reaction.<cookie_uid>    content: \\\"...reason...\\\"  }\"}},\"canClaim(address)\":{\"details\":\"Calls the isAllowList and isValidClaimPeriod functions to check if the caller is a member and within the valid claim period.\",\"returns\":{\"allowed\":\"A boolean indicating whether the caller is eligible to make a claim.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reachInJar(address,string)\":{\"details\":\"Checks if the caller is a member and if the claim period is valid. If the requirements are met, it updates the last claim timestamp for the caller, gives a cookie to the specified address, and posts the reason for the claim. This function can be called by a member on behalf of another address, allowing for more flexible distribution.\",\"params\":{\"_reason\":\"The reason provided by the member for making the claim. This will be posted publicly.\",\"cookieMonster\":\"The address to receive the cookie.\"}},\"reachInJar(string)\":{\"details\":\"Checks if the caller is a member and if the claim period is valid. If the requirements are met, it updates the last claim timestamp for the caller, gives a cookie to the caller, and posts the reason for the claim. This function can only be called by the member themselves, and not on behalf of others.\",\"params\":{\"_reason\":\"The reason provided by the member for making the claim. This will be posted publicly.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setConfig(uint256,uint256,address)\":{\"details\":\"Checks if the caller is a member and if the claim period is valid. If the requirements are met,\",\"params\":{\"_cookieAmount\":\"The amount of \\\"cookie\\\" that can be claimed.\",\"_cookieToken\":\"The address of the token that is being distributed, zero address for native.\",\"_periodLength\":\"The length of the period between claims.\"}},\"setUp(bytes)\":{\"details\":\"The initialization parameters are decoded from a bytes array into the Safe target, period length, cookie amount, and cookie token. The Safe target is set as both the avatar and target for the module.  This means that the module cannot be chained in a series of modules. A check is done to ensure the cookie amount is greater than the percentage points constant. The period length, cookie amount, and cookie token are then set as per the parameters. An event is emitted with the initialization parameters.\",\"params\":{\"_initializationParams\":\"The initialization parameters, encoded as a bytes array.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"PERC_POINTS()\":{\"notice\":\"The constant that represents percentage points for calculations.\"},\"POSTER_ADDR()\":{\"notice\":\"The address for the poster.\"},\"POSTER_TAG()\":{\"notice\":\"The tag used for posts related to this contract.\"},\"POSTER_UID()\":{\"notice\":\"The UID for the poster.\"},\"SUSTAINABILITY_ADDR()\":{\"notice\":\"The address for the sustainability fee.\"},\"SUSTAINABILITY_FEE()\":{\"notice\":\"The fee charged on each transaction, set at 1% (10,000 out of a million).\"},\"assessReason(string,bool)\":{\"notice\":\"Allows a member to assess the reason for a claim.\"},\"canClaim(address)\":{\"notice\":\"Checks if the caller is eligible to make a claim.\"},\"cookieAmount()\":{\"notice\":\"The amount of \\\"cookie\\\" that can be claimed.\"},\"cookieToken()\":{\"notice\":\"The address of the token that is being distributed.\"},\"periodLength()\":{\"notice\":\"The length of the period between claims.\"},\"reachInJar(address,string)\":{\"notice\":\"Allows a member to make a claim on behalf of another address and provides a reason for the claim.\"},\"reachInJar(string)\":{\"notice\":\"Allows a member to make a claim and provides a reason for the claim.\"},\"setConfig(uint256,uint256,address)\":{\"notice\":\"Allows owner to change congiguration.\"},\"setUp(bytes)\":{\"notice\":\"Sets up the contract with the given initialization parameters.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC6551/ImpCookieJar6551.sol\":\"ImpCookieJar6551\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@daohaus/baal-contracts/contracts/=lib/Baal/contracts/\",\":@gnosis.pm/safe-contracts/contracts/=lib/safe-contracts/contracts/\",\":@gnosis.pm/zodiac/contracts/=lib/zodiac/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts-upgradeable/contracts/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-test/src/\",\":Baal/=lib/Baal/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":prb-test/=lib/prb-test/src/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":sstore2/=lib/sstore2/contracts/\",\":zodiac/=lib/zodiac/contracts/\"]},\"sources\":{\"lib/Baal/contracts/interfaces/IPoster.sol\":{\"keccak256\":\"0x12609087c238d16adc8e5bf49ec5052dc44940a14e2b7d75a6b157eda0d8e0eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54a2a9c4c6c964eba3f5d72a9dc63a09f99c710cc7a3e78a7424fd4249a12ad9\",\"dweb:/ipfs/QmfCfwdbvxZyjxe76ZW3WDYMQ383rHTuUAosHQJsJ8tKNJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xe703814ee88fca440ac66fbfbbf3a5085d9028237145e6c3447c7ca44d1177ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c09e9ee347c311074d0cce306cef98c1b9ab7d06ff360031c4c71214e1395ef\",\"dweb:/ipfs/QmTE9VX4ejp2D5wimaPvzoAZefAMVNybCwdYJm2sEwfXni\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e\",\"dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x716f6bb2481cd6f2e21886acb6a51ca847ab34a80cc70637b4d8b4a50a6e5171\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c86343abbce4501c16dcaf3fbf553ffd36b512bb13c7460db0291233bc0d2ee\",\"dweb:/ipfs/QmTN9kZeZMLfNGxM23pUUBGmCCULR3H9xrwKQ4d19eDrSQ\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/ERC6551/ImpCookieJar6551.sol\":{\"keccak256\":\"0x5caca0f5d24931cda3092b8ef9147c93f3c4af2ad1ca448afb498e2cc22b8f6d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://f95fad18606958e07efc962054048c2f48f0efb585cfe2cc01288b172adfec99\",\"dweb:/ipfs/QmZv3B5tqr61iC5zDneBsdury7kvfDScWbvvpaRJdssdPU\"]},\"src/ERC6551/erc6551/ERC6551Module.sol\":{\"keccak256\":\"0x2135704571e354f2655291ba432342fb1ba237bcea085acbd090b73fc3530700\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c3c690157e4f1c69769b236f23da5d7b5868b45ffe4c26cacc09b116599dea01\",\"dweb:/ipfs/QmNuUFQkyhHcEEEaBAVoyLDpmfz4STMD3Jm7rLwNGedwg4\"]},\"src/core/CookieJarCore.sol\":{\"keccak256\":\"0x70fef7629f7a8dbd3d72faac294f9e5d64f2864c07c217da8c032eb563f24d31\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ef6dd40f65694c9cbde6a3e28d465c402c69c5468b6a03ea50415564191a21ff\",\"dweb:/ipfs/QmYeujZsX3Pz3zCeLrucwsnP1CGLnu1P2excybYVYEMUrn\"]},\"src/core/givers/Giver6551.sol\":{\"keccak256\":\"0x9a0a155a1442d4a496b3e6d722ac2652f3ff35987938fc3f66eca82b2f5a3fda\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7a4f0bafcd78381d0fa496be0cced55009842eb9d0a6d535e0497ae9106909fd\",\"dweb:/ipfs/QmZjZCWDBzz58LKbCx81FTMYy5C2VX131g7xWuvP5CPeR1\"]},\"src/interfaces/ICookieJar.sol\":{\"keccak256\":\"0x5c193e62b0a307193b266710c92cf8225ce72d3d085c07949cad9f1f8f7681fb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7cb449fbae620cb1d87297055939404bae32b8db4a216d5b747248127242745d\",\"dweb:/ipfs/QmTQz4nZoUkUFZSLECsGSNgCreNdHuUJKZ8pJ1SXJs7cnV\"]},\"src/interfaces/IERC6551.sol\":{\"keccak256\":\"0x2e7503b566417b98404f848796018e0c4e7cc7090045280e1aea5dff42cf74e0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ff538795c83330a5b65adcefecd0aa7b5114665a051f86dfda27987518f1fd04\",\"dweb:/ipfs/QmQFKAzhaDkapTBkbrTtmLL1jGgXFnnuPG2p1h2rKMqdN4\"]},\"src/lib/CookieUtils.sol\":{\"keccak256\":\"0x23d0c173e9850c86031124023f0493f221c271f4e11126823f6671582f455fa1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1a2194e29f73368f3f289ffd9b4ca5f1e9a1e81bd40f0f6f7e1951977663c60d\",\"dweb:/ipfs/QmNmRsgMPgz4SEaHmpKZNCsbTGz2Y6UQMLyZftuwVoqqsd\"]},\"src/lib/ERC6551AccountLib.sol\":{\"keccak256\":\"0xa422cbec331bf151b9a3c33233f98a49ba441cda43577d5ea1c9d3b44fa85cdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad41a9cccec47d0f1badf6e1312fb8bb5c0a59b03801251995f53ad3728c7a5f\",\"dweb:/ipfs/Qmc5hqGN2tQCamcfSoUDpPsGT7n7QWVhRVLk82VPwRZMkS\"]},\"src/lib/MinimalReceiver.sol\":{\"keccak256\":\"0x7b5f411e1c9f9c98a6e5e6fd8cff5cca87d3acd3749932b6741575d2019236f3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5daa08eae5e21d36180f684514a2eae64708edd5ef8bbf9ea7af19b3abb62ae0\",\"dweb:/ipfs/QmQNWKyrpVqX5EvwiQ12vFeYQ1bDN3rzQJZ2eHTkfCh56k\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "cookieMonster",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "_uid",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GiveCookie",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "initializationParams",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Setup",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PERC_POINTS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POSTER_ADDR",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POSTER_TAG",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POSTER_UID",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SUSTAINABILITY_ADDR",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SUSTAINABILITY_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "allowed",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isAllowed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_cookieUid",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "_isGood",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "assessReason"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_addresses",
              "type": "address[]"
            },
            {
              "internalType": "bool[]",
              "name": "_isAlloweds",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canClaim",
          "outputs": [
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claims",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "dateTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cookieAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cookieToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "periodLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_reason",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reachInJar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "cookieMonster",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_reason",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reachInJar"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isAllowed",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_cookieAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_cookieToken",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setConfig"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_initializationParams",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "target",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "assessReason(string,bool)": {
            "details": "The member can give a thumbs up or thumbs down to a claim reason. The assessment is posted to the Poster contract.",
            "params": {
              "_cookieUid": "The unique identifier of the claim reason to be assessed.",
              "_isGood": "A boolean indicating whether the assessment is positive (true) or negative (false).  {    tag: CookieJar.<jar_uid>.reaction.<cookie_uid>    content: \"...reason...\"  }"
            }
          },
          "canClaim(address)": {
            "details": "Calls the isAllowList and isValidClaimPeriod functions to check if the caller is a member and within the valid claim period.",
            "returns": {
              "allowed": "A boolean indicating whether the caller is eligible to make a claim."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "reachInJar(address,string)": {
            "details": "Checks if the caller is a member and if the claim period is valid. If the requirements are met, it updates the last claim timestamp for the caller, gives a cookie to the specified address, and posts the reason for the claim. This function can be called by a member on behalf of another address, allowing for more flexible distribution.",
            "params": {
              "_reason": "The reason provided by the member for making the claim. This will be posted publicly.",
              "cookieMonster": "The address to receive the cookie."
            }
          },
          "reachInJar(string)": {
            "details": "Checks if the caller is a member and if the claim period is valid. If the requirements are met, it updates the last claim timestamp for the caller, gives a cookie to the caller, and posts the reason for the claim. This function can only be called by the member themselves, and not on behalf of others.",
            "params": {
              "_reason": "The reason provided by the member for making the claim. This will be posted publicly."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setConfig(uint256,uint256,address)": {
            "details": "Checks if the caller is a member and if the claim period is valid. If the requirements are met,",
            "params": {
              "_cookieAmount": "The amount of \"cookie\" that can be claimed.",
              "_cookieToken": "The address of the token that is being distributed, zero address for native.",
              "_periodLength": "The length of the period between claims."
            }
          },
          "setUp(bytes)": {
            "details": "The initialization parameters are decoded from a bytes array into the Safe target, period length, cookie amount, and cookie token. The Safe target is set as both the avatar and target for the module.  This means that the module cannot be chained in a series of modules. A check is done to ensure the cookie amount is greater than the percentage points constant. The period length, cookie amount, and cookie token are then set as per the parameters. An event is emitted with the initialization parameters.",
            "params": {
              "_initializationParams": "The initialization parameters, encoded as a bytes array."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "PERC_POINTS()": {
            "notice": "The constant that represents percentage points for calculations."
          },
          "POSTER_ADDR()": {
            "notice": "The address for the poster."
          },
          "POSTER_TAG()": {
            "notice": "The tag used for posts related to this contract."
          },
          "POSTER_UID()": {
            "notice": "The UID for the poster."
          },
          "SUSTAINABILITY_ADDR()": {
            "notice": "The address for the sustainability fee."
          },
          "SUSTAINABILITY_FEE()": {
            "notice": "The fee charged on each transaction, set at 1% (10,000 out of a million)."
          },
          "assessReason(string,bool)": {
            "notice": "Allows a member to assess the reason for a claim."
          },
          "canClaim(address)": {
            "notice": "Checks if the caller is eligible to make a claim."
          },
          "cookieAmount()": {
            "notice": "The amount of \"cookie\" that can be claimed."
          },
          "cookieToken()": {
            "notice": "The address of the token that is being distributed."
          },
          "periodLength()": {
            "notice": "The length of the period between claims."
          },
          "reachInJar(address,string)": {
            "notice": "Allows a member to make a claim on behalf of another address and provides a reason for the claim."
          },
          "reachInJar(string)": {
            "notice": "Allows a member to make a claim and provides a reason for the claim."
          },
          "setConfig(uint256,uint256,address)": {
            "notice": "Allows owner to change congiguration."
          },
          "setUp(bytes)": {
            "notice": "Sets up the contract with the given initialization parameters."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@daohaus/baal-contracts/contracts/=lib/Baal/contracts/",
        ":@gnosis.pm/safe-contracts/contracts/=lib/safe-contracts/contracts/",
        ":@gnosis.pm/zodiac/contracts/=lib/zodiac/contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts-upgradeable/contracts/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":@prb/test/=lib/prb-test/src/",
        ":Baal/=lib/Baal/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":prb-test/=lib/prb-test/src/",
        ":safe-contracts/=lib/safe-contracts/contracts/",
        ":sstore2/=lib/sstore2/contracts/",
        ":zodiac/=lib/zodiac/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ERC6551/ImpCookieJar6551.sol": "ImpCookieJar6551"
      },
      "libraries": {}
    },
    "sources": {
      "lib/Baal/contracts/interfaces/IPoster.sol": {
        "keccak256": "0x12609087c238d16adc8e5bf49ec5052dc44940a14e2b7d75a6b157eda0d8e0eb",
        "urls": [
          "bzz-raw://54a2a9c4c6c964eba3f5d72a9dc63a09f99c710cc7a3e78a7424fd4249a12ad9",
          "dweb:/ipfs/QmfCfwdbvxZyjxe76ZW3WDYMQ383rHTuUAosHQJsJ8tKNJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb",
        "urls": [
          "bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d",
          "dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0xe703814ee88fca440ac66fbfbbf3a5085d9028237145e6c3447c7ca44d1177ed",
        "urls": [
          "bzz-raw://2c09e9ee347c311074d0cce306cef98c1b9ab7d06ff360031c4c71214e1395ef",
          "dweb:/ipfs/QmTE9VX4ejp2D5wimaPvzoAZefAMVNybCwdYJm2sEwfXni"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020",
        "urls": [
          "bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e",
          "dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x716f6bb2481cd6f2e21886acb6a51ca847ab34a80cc70637b4d8b4a50a6e5171",
        "urls": [
          "bzz-raw://7c86343abbce4501c16dcaf3fbf553ffd36b512bb13c7460db0291233bc0d2ee",
          "dweb:/ipfs/QmTN9kZeZMLfNGxM23pUUBGmCCULR3H9xrwKQ4d19eDrSQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/ERC6551/ImpCookieJar6551.sol": {
        "keccak256": "0x5caca0f5d24931cda3092b8ef9147c93f3c4af2ad1ca448afb498e2cc22b8f6d",
        "urls": [
          "bzz-raw://f95fad18606958e07efc962054048c2f48f0efb585cfe2cc01288b172adfec99",
          "dweb:/ipfs/QmZv3B5tqr61iC5zDneBsdury7kvfDScWbvvpaRJdssdPU"
        ],
        "license": "Unlicense"
      },
      "src/ERC6551/erc6551/ERC6551Module.sol": {
        "keccak256": "0x2135704571e354f2655291ba432342fb1ba237bcea085acbd090b73fc3530700",
        "urls": [
          "bzz-raw://c3c690157e4f1c69769b236f23da5d7b5868b45ffe4c26cacc09b116599dea01",
          "dweb:/ipfs/QmNuUFQkyhHcEEEaBAVoyLDpmfz4STMD3Jm7rLwNGedwg4"
        ],
        "license": "UNLICENSED"
      },
      "src/core/CookieJarCore.sol": {
        "keccak256": "0x70fef7629f7a8dbd3d72faac294f9e5d64f2864c07c217da8c032eb563f24d31",
        "urls": [
          "bzz-raw://ef6dd40f65694c9cbde6a3e28d465c402c69c5468b6a03ea50415564191a21ff",
          "dweb:/ipfs/QmYeujZsX3Pz3zCeLrucwsnP1CGLnu1P2excybYVYEMUrn"
        ],
        "license": "Unlicense"
      },
      "src/core/givers/Giver6551.sol": {
        "keccak256": "0x9a0a155a1442d4a496b3e6d722ac2652f3ff35987938fc3f66eca82b2f5a3fda",
        "urls": [
          "bzz-raw://7a4f0bafcd78381d0fa496be0cced55009842eb9d0a6d535e0497ae9106909fd",
          "dweb:/ipfs/QmZjZCWDBzz58LKbCx81FTMYy5C2VX131g7xWuvP5CPeR1"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/ICookieJar.sol": {
        "keccak256": "0x5c193e62b0a307193b266710c92cf8225ce72d3d085c07949cad9f1f8f7681fb",
        "urls": [
          "bzz-raw://7cb449fbae620cb1d87297055939404bae32b8db4a216d5b747248127242745d",
          "dweb:/ipfs/QmTQz4nZoUkUFZSLECsGSNgCreNdHuUJKZ8pJ1SXJs7cnV"
        ],
        "license": "Unlicense"
      },
      "src/interfaces/IERC6551.sol": {
        "keccak256": "0x2e7503b566417b98404f848796018e0c4e7cc7090045280e1aea5dff42cf74e0",
        "urls": [
          "bzz-raw://ff538795c83330a5b65adcefecd0aa7b5114665a051f86dfda27987518f1fd04",
          "dweb:/ipfs/QmQFKAzhaDkapTBkbrTtmLL1jGgXFnnuPG2p1h2rKMqdN4"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/CookieUtils.sol": {
        "keccak256": "0x23d0c173e9850c86031124023f0493f221c271f4e11126823f6671582f455fa1",
        "urls": [
          "bzz-raw://1a2194e29f73368f3f289ffd9b4ca5f1e9a1e81bd40f0f6f7e1951977663c60d",
          "dweb:/ipfs/QmNmRsgMPgz4SEaHmpKZNCsbTGz2Y6UQMLyZftuwVoqqsd"
        ],
        "license": "UNLICENSED"
      },
      "src/lib/ERC6551AccountLib.sol": {
        "keccak256": "0xa422cbec331bf151b9a3c33233f98a49ba441cda43577d5ea1c9d3b44fa85cdd",
        "urls": [
          "bzz-raw://ad41a9cccec47d0f1badf6e1312fb8bb5c0a59b03801251995f53ad3728c7a5f",
          "dweb:/ipfs/Qmc5hqGN2tQCamcfSoUDpPsGT7n7QWVhRVLk82VPwRZMkS"
        ],
        "license": "MIT"
      },
      "src/lib/MinimalReceiver.sol": {
        "keccak256": "0x7b5f411e1c9f9c98a6e5e6fd8cff5cca87d3acd3749932b6741575d2019236f3",
        "urls": [
          "bzz-raw://5daa08eae5e21d36180f684514a2eae64708edd5ef8bbf9ea7af19b3abb62ae0",
          "dweb:/ipfs/QmQNWKyrpVqX5EvwiQ12vFeYQ1bDN3rzQJZ2eHTkfCh56k"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ERC6551/ImpCookieJar6551.sol",
    "id": 41537,
    "exportedSymbols": {
      "CookieJarCore": [
        43540
      ],
      "CookieUtils": [
        44514
      ],
      "Giver6551": [
        44028
      ],
      "ImpCookieJar6551": [
        41536
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:1659:64",
    "nodes": [
      {
        "id": 41354,
        "nodeType": "PragmaDirective",
        "src": "38:23:64",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 41356,
        "nodeType": "ImportDirective",
        "src": "63:57:64",
        "nodes": [],
        "absolutePath": "src/core/CookieJarCore.sol",
        "file": "src/core/CookieJarCore.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41537,
        "sourceUnit": 43541,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41355,
              "name": "CookieJarCore",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43540,
              "src": "71:13:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41358,
        "nodeType": "ImportDirective",
        "src": "121:56:64",
        "nodes": [],
        "absolutePath": "src/core/givers/Giver6551.sol",
        "file": "src/core/givers/Giver6551.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41537,
        "sourceUnit": 44029,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41357,
              "name": "Giver6551",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44028,
              "src": "129:9:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41360,
        "nodeType": "ImportDirective",
        "src": "178:54:64",
        "nodes": [],
        "absolutePath": "src/lib/CookieUtils.sol",
        "file": "src/lib/CookieUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41537,
        "sourceUnit": 44515,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41359,
              "name": "CookieUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44514,
              "src": "187:11:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41536,
        "nodeType": "ContractDefinition",
        "src": "234:1462:64",
        "nodes": [
          {
            "id": 41368,
            "nodeType": "VariableDeclaration",
            "src": "294:59:64",
            "nodes": [],
            "constant": false,
            "functionSelector": "2848aeaf",
            "mutability": "mutable",
            "name": "allowList",
            "nameLocation": "344:9:64",
            "scope": 41536,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 41367,
              "keyName": "allowed",
              "keyNameLocation": "310:7:64",
              "keyType": {
                "id": 41365,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "302:7:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "294:42:64",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "isAllowed",
              "valueNameLocation": "326:9:64",
              "valueType": {
                "id": 41366,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "321:4:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 41435,
            "nodeType": "FunctionDefinition",
            "src": "360:495:64",
            "nodes": [],
            "body": {
              "id": 41434,
              "nodeType": "Block",
              "src": "462:393:64",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41378,
                    null,
                    null,
                    null,
                    41381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41378,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "481:7:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41434,
                      "src": "473:15:64",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41377,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "473:7:64",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 41381,
                      "mutability": "mutable",
                      "name": "_allowList",
                      "nameLocation": "510:10:64",
                      "nodeType": "VariableDeclaration",
                      "scope": 41434,
                      "src": "493:27:64",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "493:7:64",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41380,
                        "nodeType": "ArrayTypeName",
                        "src": "493:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41398,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41384,
                        "name": "_initializationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41370,
                        "src": "547:21:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 41386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "571:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41385,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "571:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "580:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 41387,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "580:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "589:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 41389,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "589:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 41392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "598:7:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41391,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "598:7:64",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 41394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "607:7:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41393,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "607:7:64",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "607:9:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "type(address[] memory)"
                            }
                          }
                        ],
                        "id": 41396,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "570:47:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(uint256),type(address),type(address[] memory))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_array$_t_address_$dyn_memory_ptr_$_$",
                          "typeString": "tuple(type(address),type(uint256),type(uint256),type(address),type(address[] memory))"
                        }
                      ],
                      "expression": {
                        "id": 41382,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "536:3:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "540:6:64",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "536:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 41397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:82:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$_t_address_payable_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(address payable,uint256,uint256,address payable,address[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "472:146:64"
                },
                {
                  "expression": {
                    "id": 41401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41399,
                      "name": "target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43919,
                      "src": "628:6:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41400,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41378,
                      "src": "637:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "628:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41402,
                  "nodeType": "ExpressionStatement",
                  "src": "628:16:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41406,
                        "name": "_initializationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41370,
                        "src": "675:21:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 41403,
                        "name": "CookieJarCore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43540,
                        "src": "655:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CookieJarCore_$43540_$",
                          "typeString": "type(contract CookieJarCore)"
                        }
                      },
                      "id": 41405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "669:5:64",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43262,
                      "src": "655:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 41407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:42:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41408,
                  "nodeType": "ExpressionStatement",
                  "src": "655:42:64"
                },
                {
                  "body": {
                    "id": 41428,
                    "nodeType": "Block",
                    "src": "756:56:64",
                    "statements": [
                      {
                        "expression": {
                          "id": 41426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 41420,
                              "name": "allowList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41368,
                              "src": "770:9:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 41424,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 41421,
                                "name": "_allowList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41381,
                                "src": "780:10:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 41423,
                              "indexExpression": {
                                "id": 41422,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41410,
                                "src": "791:1:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "780:13:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "770:24:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 41425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "797:4:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "770:31:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41427,
                        "nodeType": "ExpressionStatement",
                        "src": "770:31:64"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41413,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41410,
                      "src": "728:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41414,
                        "name": "_allowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41381,
                        "src": "732:10:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 41415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "743:6:64",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "732:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "728:21:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41429,
                  "initializationExpression": {
                    "assignments": [
                      41410
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41410,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "721:1:64",
                        "nodeType": "VariableDeclaration",
                        "scope": 41429,
                        "src": "713:9:64",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "713:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41412,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "725:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "713:13:64"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "751:3:64",
                      "subExpression": {
                        "id": 41417,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41410,
                        "src": "751:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41419,
                    "nodeType": "ExpressionStatement",
                    "src": "751:3:64"
                  },
                  "nodeType": "ForStatement",
                  "src": "708:104:64"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41431,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41378,
                        "src": "840:7:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41430,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29764,
                      "src": "822:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 41432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:26:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41433,
                  "nodeType": "ExpressionStatement",
                  "src": "822:26:64"
                }
              ]
            },
            "baseFunctions": [
              43262
            ],
            "functionSelector": "a4f9edbf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41375,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41374,
                  "name": "initializer",
                  "nameLocations": [
                    "450:11:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29861,
                  "src": "450:11:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "450:11:64"
              }
            ],
            "name": "setUp",
            "nameLocation": "369:5:64",
            "overrides": {
              "id": 41373,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 41372,
                  "name": "CookieJarCore",
                  "nameLocations": [
                    "435:13:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43540,
                  "src": "435:13:64"
                }
              ],
              "src": "426:23:64"
            },
            "parameters": {
              "id": 41371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41370,
                  "mutability": "mutable",
                  "name": "_initializationParams",
                  "nameLocation": "388:21:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41435,
                  "src": "375:34:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41369,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "375:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "374:36:64"
            },
            "returnParameters": {
              "id": 41376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "462:0:64"
            },
            "scope": 41536,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 41462,
            "nodeType": "FunctionDefinition",
            "src": "861:251:64",
            "nodes": [],
            "body": {
              "id": 41461,
              "nodeType": "Block",
              "src": "953:159:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41447,
                        "name": "cookieMonster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41437,
                        "src": "984:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41448,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41439,
                        "src": "999:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41449,
                        "name": "cookieToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43199,
                        "src": "1007:11:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41444,
                        "name": "Giver6551",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44028,
                        "src": "963:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Giver6551_$44028_$",
                          "typeString": "type(contract Giver6551)"
                        }
                      },
                      "id": 41446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "973:10:64",
                      "memberName": "giveCookie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44027,
                      "src": "963:20:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 41450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:56:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41451,
                  "nodeType": "ExpressionStatement",
                  "src": "963:56:64"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41453,
                        "name": "cookieMonster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41437,
                        "src": "1045:13:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41454,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41439,
                        "src": "1060:6:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41457,
                            "name": "POSTER_UID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43193,
                            "src": "1093:10:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "expression": {
                            "id": 41455,
                            "name": "CookieUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44514,
                            "src": "1068:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CookieUtils_$44514_$",
                              "typeString": "type(library CookieUtils)"
                            }
                          },
                          "id": 41456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1080:12:64",
                          "memberName": "getCookieUid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44496,
                          "src": "1068:24:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory) view returns (string memory)"
                          }
                        },
                        "id": 41458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1068:36:64",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 41452,
                      "name": "GiveCookie",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44264,
                      "src": "1034:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory)"
                      }
                    },
                    "id": 41459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:71:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41460,
                  "nodeType": "EmitStatement",
                  "src": "1029:76:64"
                }
              ]
            },
            "baseFunctions": [
              43354
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveCookie",
            "nameLocation": "870:10:64",
            "overrides": {
              "id": 41442,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 41441,
                  "name": "CookieJarCore",
                  "nameLocations": [
                    "938:13:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43540,
                  "src": "938:13:64"
                }
              ],
              "src": "929:23:64"
            },
            "parameters": {
              "id": 41440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41437,
                  "mutability": "mutable",
                  "name": "cookieMonster",
                  "nameLocation": "889:13:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41462,
                  "src": "881:21:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41436,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41439,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "912:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41462,
                  "src": "904:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:39:64"
            },
            "returnParameters": {
              "id": 41443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "953:0:64"
            },
            "scope": 41536,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41475,
            "nodeType": "FunctionDefinition",
            "src": "1118:118:64",
            "nodes": [],
            "body": {
              "id": 41474,
              "nodeType": "Block",
              "src": "1194:42:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 41470,
                      "name": "allowList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41368,
                      "src": "1211:9:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 41472,
                    "indexExpression": {
                      "id": 41471,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41464,
                      "src": "1221:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1211:18:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 41469,
                  "id": 41473,
                  "nodeType": "Return",
                  "src": "1204:25:64"
                }
              ]
            },
            "baseFunctions": [
              43456
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowList",
            "nameLocation": "1127:11:64",
            "overrides": {
              "id": 41466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1170:8:64"
            },
            "parameters": {
              "id": 41465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41464,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1147:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41475,
                  "src": "1139:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1138:17:64"
            },
            "returnParameters": {
              "id": 41469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41468,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41475,
                  "src": "1188:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1187:6:64"
            },
            "scope": 41536,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41491,
            "nodeType": "FunctionDefinition",
            "src": "1242:125:64",
            "nodes": [],
            "body": {
              "id": 41490,
              "nodeType": "Block",
              "src": "1318:49:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41484,
                        "name": "allowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41368,
                        "src": "1328:9:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 41486,
                      "indexExpression": {
                        "id": 41485,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41477,
                        "src": "1338:8:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1328:19:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41487,
                      "name": "_isAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41479,
                      "src": "1350:10:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1328:32:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41489,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:32:64"
                }
              ]
            },
            "functionSelector": "7666f125",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41482,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41481,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1308:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29704,
                  "src": "1308:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "1308:9:64"
              }
            ],
            "name": "setAllowList",
            "nameLocation": "1251:12:64",
            "parameters": {
              "id": 41480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41477,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1272:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41491,
                  "src": "1264:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1264:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41479,
                  "mutability": "mutable",
                  "name": "_isAllowed",
                  "nameLocation": "1287:10:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41491,
                  "src": "1282:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1263:35:64"
            },
            "returnParameters": {
              "id": 41483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:64"
            },
            "scope": 41536,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41535,
            "nodeType": "FunctionDefinition",
            "src": "1373:321:64",
            "nodes": [],
            "body": {
              "id": 41534,
              "nodeType": "Block",
              "src": "1472:222:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41503,
                            "name": "_addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41494,
                            "src": "1490:10:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 41504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1501:6:64",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1490:17:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 41505,
                            "name": "_isAlloweds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41497,
                            "src": "1511:11:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[] memory"
                            }
                          },
                          "id": 41506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1523:6:64",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1511:18:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1490:39:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6f6b69654a6172363535313a206c656e677468206d69736d61746368",
                        "id": 41508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1531:32:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1da042ba31b617d20ce34705dfdf09db56920280c4dec5407b6a8f12c523cc34",
                          "typeString": "literal_string \"CookieJar6551: length mismatch\""
                        },
                        "value": "CookieJar6551: length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1da042ba31b617d20ce34705dfdf09db56920280c4dec5407b6a8f12c523cc34",
                          "typeString": "literal_string \"CookieJar6551: length mismatch\""
                        }
                      ],
                      "id": 41502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1482:7:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:82:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41510,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:82:64"
                },
                {
                  "body": {
                    "id": 41532,
                    "nodeType": "Block",
                    "src": "1622:66:64",
                    "statements": [
                      {
                        "expression": {
                          "id": 41530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 41522,
                              "name": "allowList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41368,
                              "src": "1636:9:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 41526,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 41523,
                                "name": "_addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41494,
                                "src": "1646:10:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 41525,
                              "indexExpression": {
                                "id": 41524,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41512,
                                "src": "1657:1:64",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1646:13:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1636:24:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 41527,
                              "name": "_isAlloweds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41497,
                              "src": "1663:11:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                "typeString": "bool[] memory"
                              }
                            },
                            "id": 41529,
                            "indexExpression": {
                              "id": 41528,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41512,
                              "src": "1675:1:64",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1663:14:64",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1636:41:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41531,
                        "nodeType": "ExpressionStatement",
                        "src": "1636:41:64"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41515,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41512,
                      "src": "1594:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41516,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41494,
                        "src": "1598:10:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 41517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1609:6:64",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1598:17:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1594:21:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41533,
                  "initializationExpression": {
                    "assignments": [
                      41512
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41512,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1587:1:64",
                        "nodeType": "VariableDeclaration",
                        "scope": 41533,
                        "src": "1579:9:64",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1579:7:64",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41514,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1591:1:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1579:13:64"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1617:3:64",
                      "subExpression": {
                        "id": 41519,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41512,
                        "src": "1617:1:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41521,
                    "nodeType": "ExpressionStatement",
                    "src": "1617:3:64"
                  },
                  "nodeType": "ForStatement",
                  "src": "1574:114:64"
                }
              ]
            },
            "functionSelector": "b50c99b7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41500,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41499,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1462:9:64"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29704,
                  "src": "1462:9:64"
                },
                "nodeType": "ModifierInvocation",
                "src": "1462:9:64"
              }
            ],
            "name": "batchAllowList",
            "nameLocation": "1382:14:64",
            "parameters": {
              "id": 41498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41494,
                  "mutability": "mutable",
                  "name": "_addresses",
                  "nameLocation": "1414:10:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41535,
                  "src": "1397:27:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41492,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1397:7:64",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 41493,
                    "nodeType": "ArrayTypeName",
                    "src": "1397:9:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41497,
                  "mutability": "mutable",
                  "name": "_isAlloweds",
                  "nameLocation": "1440:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 41535,
                  "src": "1426:25:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41495,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1426:4:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 41496,
                    "nodeType": "ArrayTypeName",
                    "src": "1426:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1396:56:64"
            },
            "returnParameters": {
              "id": 41501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1472:0:64"
            },
            "scope": 41536,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41361,
              "name": "CookieJarCore",
              "nameLocations": [
                "263:13:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43540,
              "src": "263:13:64"
            },
            "id": 41362,
            "nodeType": "InheritanceSpecifier",
            "src": "263:13:64"
          },
          {
            "baseName": {
              "id": 41363,
              "name": "Giver6551",
              "nameLocations": [
                "278:9:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44028,
              "src": "278:9:64"
            },
            "id": 41364,
            "nodeType": "InheritanceSpecifier",
            "src": "278:9:64"
          }
        ],
        "canonicalName": "ImpCookieJar6551",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41536,
          44028,
          43540,
          44311,
          29790,
          30331,
          29959
        ],
        "name": "ImpCookieJar6551",
        "nameLocation": "243:16:64",
        "scope": 41537,
        "usedErrors": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 64
}